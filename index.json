{
  "api/CAF.Camera.html": {
    "href": "api/CAF.Camera.html",
    "title": "Namespace CAF.Camera | Character Action Framework Documentation",
    "keywords": "Namespace CAF.Camera Interfaces LookHandler The LookHandler is used to defined a camera-like object. This is useful for objects that don't need an actual camera, but do need to move based on some sort of \"camera.\""
  },
  "api/CAF.Camera.LookHandler.html": {
    "href": "api/CAF.Camera.LookHandler.html",
    "title": "Interface LookHandler | Character Action Framework Documentation",
    "keywords": "Interface LookHandler The LookHandler is used to defined a camera-like object. This is useful for objects that don't need an actual camera, but do need to move based on some sort of \"camera.\" Namespace : CAF.Camera Assembly : CAF.dll Syntax public interface LookHandler Methods | Improve this Doc View Source LookAt(Vector3) Set the look direction to point at the given position. Declaration void LookAt(Vector3 position) Parameters Type Name Description Vector3 position The position to look at. | Improve this Doc View Source LookTransform() The transform that is used to define what direction we're currently looking in. Declaration Transform LookTransform() Returns Type Description Transform The transform. | Improve this Doc View Source Reset() Resets the lookhandler to a wanted set position. Declaration void Reset() | Improve this Doc View Source SetLockOnTarget(FighterBase) Set the target that we should lock on to. Declaration void SetLockOnTarget(FighterBase entityTarget) Parameters Type Name Description FighterBase entityTarget | Improve this Doc View Source SetLookAtTarget(Transform) Set the target that we should be tracking. Declaration void SetLookAtTarget(Transform target) Parameters Type Name Description Transform target | Improve this Doc View Source SetRotation(Quaternion) Set the rotation of the handler. Declaration void SetRotation(Quaternion rotation) Parameters Type Name Description Quaternion rotation The rotation quaternion. | Improve this Doc View Source SetRotation(Vector3) Set the rotation of the handler. Declaration void SetRotation(Vector3 rotation) Parameters Type Name Description Vector3 rotation The rotation euler angle."
  },
  "api/CAF.Combat.AttackDefinition.html": {
    "href": "api/CAF.Combat.AttackDefinition.html",
    "title": "Class AttackDefinition | Character Action Framework Documentation",
    "keywords": "Class AttackDefinition Inheritance Object AttackDefinition Namespace : CAF.Combat Assembly : CAF.dll Syntax public class AttackDefinition : ScriptableObject Fields | Improve this Doc View Source animationAir Declaration public AnimationClip animationAir Field Value Type Description AnimationClip | Improve this Doc View Source animationGround Declaration public AnimationClip animationGround Field Value Type Description AnimationClip | Improve this Doc View Source attackName Declaration public string attackName Field Value Type Description String | Improve this Doc View Source boxGroups Declaration public List<BoxGroup> boxGroups Field Value Type Description List < BoxGroup > | Improve this Doc View Source chargeWindows Declaration public List<ChargeDefinition> chargeWindows Field Value Type Description List < ChargeDefinition > | Improve this Doc View Source commandAttackCancelWindows Declaration public List<Vector2Int> commandAttackCancelWindows Field Value Type Description List < Vector2Int > | Improve this Doc View Source description Declaration public string description Field Value Type Description String | Improve this Doc View Source enemyStepWindows Declaration public List<Vector2Int> enemyStepWindows Field Value Type Description List < Vector2Int > | Improve this Doc View Source events Declaration public List<AttackEventDefinition> events Field Value Type Description List < AttackEventDefinition > | Improve this Doc View Source jumpCancelWindows Declaration public List<Vector2Int> jumpCancelWindows Field Value Type Description List < Vector2Int > | Improve this Doc View Source landCancelWindows Declaration public List<Vector2Int> landCancelWindows Field Value Type Description List < Vector2Int > | Improve this Doc View Source length Declaration public int length Field Value Type Description Int32 | Improve this Doc View Source stateOverride Declaration public ushort stateOverride Field Value Type Description UInt16 | Improve this Doc View Source useState Declaration public bool useState Field Value Type Description Boolean | Improve this Doc View Source wrapMode Declaration public WrapMode wrapMode Field Value Type Description WrapMode"
  },
  "api/CAF.Combat.AttackDefinitionEditor.html": {
    "href": "api/CAF.Combat.AttackDefinitionEditor.html",
    "title": "Class AttackDefinitionEditor | Character Action Framework Documentation",
    "keywords": "Class AttackDefinitionEditor Inheritance Object AttackDefinitionEditor Namespace : CAF.Combat Assembly : CAF.Editor.dll Syntax public class AttackDefinitionEditor : Editor Methods | Improve this Doc View Source OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/CAF.Combat.AttackDefinitionEditorWindow.html": {
    "href": "api/CAF.Combat.AttackDefinitionEditorWindow.html",
    "title": "Class AttackDefinitionEditorWindow | Character Action Framework Documentation",
    "keywords": "Class AttackDefinitionEditorWindow Inheritance Object AttackDefinitionEditorWindow Namespace : CAF.Combat Assembly : CAF.Editor.dll Syntax public class AttackDefinitionEditorWindow : EditorWindow Fields | Improve this Doc View Source attack Declaration protected AttackDefinition attack Field Value Type Description AttackDefinition | Improve this Doc View Source attackEventTypes Declaration protected Dictionary<string, Type> attackEventTypes Field Value Type Description Dictionary < String , Type > | Improve this Doc View Source boxDefinitionTypes Declaration protected Dictionary<string, Type> boxDefinitionTypes Field Value Type Description Dictionary < String , Type > | Improve this Doc View Source boxesFoldout Declaration protected bool boxesFoldout Field Value Type Description Boolean | Improve this Doc View Source cancelWindowsFoldout Declaration protected bool cancelWindowsFoldout Field Value Type Description Boolean | Improve this Doc View Source chargeWindowsFoldout Declaration protected bool chargeWindowsFoldout Field Value Type Description Boolean | Improve this Doc View Source commandAttackCancelWindowsFoldout Declaration protected bool commandAttackCancelWindowsFoldout Field Value Type Description Boolean | Improve this Doc View Source currentHitboxGroupIndex Declaration protected int currentHitboxGroupIndex Field Value Type Description Int32 | Improve this Doc View Source currentMenu Declaration protected int currentMenu Field Value Type Description Int32 | Improve this Doc View Source enemyStepWindowsFoldout Declaration protected bool enemyStepWindowsFoldout Field Value Type Description Boolean | Improve this Doc View Source eventSelected Declaration protected int eventSelected Field Value Type Description Int32 | Improve this Doc View Source eventVariablesFoldout Declaration protected bool eventVariablesFoldout Field Value Type Description Boolean | Improve this Doc View Source hitInfoTypes Declaration protected Dictionary<string, Type> hitInfoTypes Field Value Type Description Dictionary < String , Type > | Improve this Doc View Source jumpCancelWindowsFoldout Declaration protected bool jumpCancelWindowsFoldout Field Value Type Description Boolean | Improve this Doc View Source landCancelWindowsFoldout Declaration protected bool landCancelWindowsFoldout Field Value Type Description Boolean | Improve this Doc View Source scrollPos Declaration protected Vector2 scrollPos Field Value Type Description Vector2 Methods | Improve this Doc View Source AddAttackEventDefinition() Declaration protected virtual void AddAttackEventDefinition() | Improve this Doc View Source AddBoxGroup() Declaration protected virtual void AddBoxGroup() | Improve this Doc View Source BoxesMenuNavigationBar() Declaration protected virtual void BoxesMenuNavigationBar() | Improve this Doc View Source CreateChargeDefinition() Declaration protected virtual ChargeDefinition CreateChargeDefinition() Returns Type Description ChargeDefinition | Improve this Doc View Source CreateChargeLevelInstance() Declaration protected virtual ChargeLevel CreateChargeLevelInstance() Returns Type Description ChargeLevel | Improve this Doc View Source DrawBoxesMenu() Declaration protected virtual void DrawBoxesMenu() | Improve this Doc View Source DrawBoxGroup(BoxGroup) Declaration protected virtual void DrawBoxGroup(BoxGroup currentGroup) Parameters Type Name Description BoxGroup currentGroup | Improve this Doc View Source DrawCancelWindow(String, ref Boolean, ref List<Vector2Int>, Single) Declaration protected virtual void DrawCancelWindow(string foldoutName, ref bool foldout, ref List<Vector2Int> windows, float width) Parameters Type Name Description String foldoutName Boolean foldout List < Vector2Int > windows Single width | Improve this Doc View Source DrawChargeLevel(Int32, Int32) Declaration protected virtual void DrawChargeLevel(int chargeWindowIndex, int index) Parameters Type Name Description Int32 chargeWindowIndex Int32 index | Improve this Doc View Source DrawChargeWindow(Int32) Declaration protected virtual void DrawChargeWindow(int i) Parameters Type Name Description Int32 i | Improve this Doc View Source DrawEventsWindow() Declaration protected virtual void DrawEventsWindow() | Improve this Doc View Source DrawGeneralMenu() Declaration protected virtual void DrawGeneralMenu() | Improve this Doc View Source DrawHitboxOptions(BoxGroup, Int32) Declaration protected virtual void DrawHitboxOptions(BoxGroup currentGroup, int index) Parameters Type Name Description BoxGroup currentGroup Int32 index | Improve this Doc View Source DrawMenu() Declaration protected virtual void DrawMenu() | Improve this Doc View Source DrawMenuBar() Declaration protected virtual void DrawMenuBar() | Improve this Doc View Source DrawWindowsMenu() Declaration protected virtual void DrawWindowsMenu() | Improve this Doc View Source Init(AttackDefinition) Declaration public static void Init(AttackDefinition attack) Parameters Type Name Description AttackDefinition attack | Improve this Doc View Source OnAttackEventSelected(Object) Declaration protected void OnAttackEventSelected(object t) Parameters Type Name Description Object t | Improve this Doc View Source OnBoxDefinitionSelected(Object) Declaration protected void OnBoxDefinitionSelected(object t) Parameters Type Name Description Object t | Improve this Doc View Source OnFocus() Declaration protected virtual void OnFocus() | Improve this Doc View Source OnGUI() Declaration protected virtual void OnGUI() | Improve this Doc View Source OnHitInfoSelected(Object) Declaration protected void OnHitInfoSelected(object t) Parameters Type Name Description Object t | Improve this Doc View Source ShowEventInfo(Int32) Declaration protected virtual void ShowEventInfo(int eventSelected) Parameters Type Name Description Int32 eventSelected"
  },
  "api/CAF.Combat.AttackEvent.html": {
    "href": "api/CAF.Combat.AttackEvent.html",
    "title": "Class AttackEvent | Character Action Framework Documentation",
    "keywords": "Class AttackEvent Inheritance Object AttackEvent Namespace : CAF.Combat Assembly : CAF.dll Syntax [Serializable] public class AttackEvent Methods | Improve this Doc View Source DrawEventVariables(AttackEventDefinition) Declaration public virtual void DrawEventVariables(AttackEventDefinition eventDefinition) Parameters Type Name Description AttackEventDefinition eventDefinition | Improve this Doc View Source Evaluate(UInt32, UInt32, FighterBase, AttackEventVariables) Proceses the event. Declaration public virtual bool Evaluate(uint frame, uint endFrame, FighterBase manager, AttackEventVariables variables) Parameters Type Name Description UInt32 frame The frame the event is on relative to it's start. UInt32 endFrame The last frame of the event, relative to it's start. FighterBase manager The manager using this event. AttackEventVariables variables Returns Type Description Boolean True if the attack state should cancel. | Improve this Doc View Source GetName() Declaration public virtual string GetName() Returns Type Description String"
  },
  "api/CAF.Combat.AttackEventDefinition.html": {
    "href": "api/CAF.Combat.AttackEventDefinition.html",
    "title": "Class AttackEventDefinition | Character Action Framework Documentation",
    "keywords": "Class AttackEventDefinition Inheritance Object AttackEventDefinition Namespace : CAF.Combat Assembly : CAF.dll Syntax [Serializable] public class AttackEventDefinition Fields | Improve this Doc View Source active Declaration public bool active Field Value Type Description Boolean | Improve this Doc View Source attackEvent Declaration public AttackEvent attackEvent Field Value Type Description AttackEvent | Improve this Doc View Source chargeLevelMax Declaration public int chargeLevelMax Field Value Type Description Int32 | Improve this Doc View Source chargeLevelMin Declaration public int chargeLevelMin Field Value Type Description Int32 | Improve this Doc View Source endFrame Declaration public uint endFrame Field Value Type Description UInt32 | Improve this Doc View Source input Declaration public InputSequence input Field Value Type Description InputSequence | Improve this Doc View Source inputCheckEndFrame Declaration public uint inputCheckEndFrame Field Value Type Description UInt32 | Improve this Doc View Source inputCheckProcessed Declaration public bool inputCheckProcessed Field Value Type Description Boolean | Improve this Doc View Source inputCheckStartFrame Declaration public uint inputCheckStartFrame Field Value Type Description UInt32 | Improve this Doc View Source inputCheckTiming Declaration public AttackEventInputCheckTiming inputCheckTiming Field Value Type Description AttackEventInputCheckTiming | Improve this Doc View Source nickname Declaration public string nickname Field Value Type Description String | Improve this Doc View Source onHit Declaration public bool onHit Field Value Type Description Boolean | Improve this Doc View Source onHitHitboxGroup Declaration public int onHitHitboxGroup Field Value Type Description Int32 | Improve this Doc View Source startFrame Declaration public uint startFrame Field Value Type Description UInt32 | Improve this Doc View Source variables Declaration public AttackEventVariables variables Field Value Type Description AttackEventVariables"
  },
  "api/CAF.Combat.AttackEventInputCheckTiming.html": {
    "href": "api/CAF.Combat.AttackEventInputCheckTiming.html",
    "title": "Enum AttackEventInputCheckTiming | Character Action Framework Documentation",
    "keywords": "Enum AttackEventInputCheckTiming Namespace : CAF.Combat Assembly : CAF.dll Syntax public enum AttackEventInputCheckTiming Fields Name Description CONTINUOUS NONE ONCE"
  },
  "api/CAF.Combat.AttackEventVariables.html": {
    "href": "api/CAF.Combat.AttackEventVariables.html",
    "title": "Class AttackEventVariables | Character Action Framework Documentation",
    "keywords": "Class AttackEventVariables Inheritance Object AttackEventVariables Namespace : CAF.Combat Assembly : CAF.dll Syntax [Serializable] public class AttackEventVariables Fields | Improve this Doc View Source curveVars Declaration public List<AnimationCurve> curveVars Field Value Type Description List < AnimationCurve > | Improve this Doc View Source floatVars Declaration public List<float> floatVars Field Value Type Description List < Single > | Improve this Doc View Source intVars Declaration public List<int> intVars Field Value Type Description List < Int32 > | Improve this Doc View Source objectVars Declaration public List<Object> objectVars Field Value Type Description List < Object >"
  },
  "api/CAF.Combat.BoxDefinition.html": {
    "href": "api/CAF.Combat.BoxDefinition.html",
    "title": "Class BoxDefinition | Character Action Framework Documentation",
    "keywords": "Class BoxDefinition Default implementation of BoxDefinitionBase. Inheritance Object BoxDefinitionBase BoxDefinition Inherited Members BoxDefinitionBase.shape Namespace : CAF.Combat Assembly : CAF.dll Syntax [Serializable] public class BoxDefinition : BoxDefinitionBase Constructors | Improve this Doc View Source BoxDefinition() Declaration public BoxDefinition() | Improve this Doc View Source BoxDefinition(BoxDefinition) Declaration public BoxDefinition(BoxDefinition other) Parameters Type Name Description BoxDefinition other Fields | Improve this Doc View Source height Declaration public float height Field Value Type Description Single | Improve this Doc View Source offset Declaration public Vector3 offset Field Value Type Description Vector3 | Improve this Doc View Source radius Declaration public float radius Field Value Type Description Single | Improve this Doc View Source rotation Declaration public Vector3 rotation Field Value Type Description Vector3 | Improve this Doc View Source size Declaration public Vector3 size Field Value Type Description Vector3 Methods | Improve this Doc View Source DrawInspector() Declaration public override void DrawInspector() Overrides BoxDefinitionBase.DrawInspector()"
  },
  "api/CAF.Combat.BoxDefinitionBase.html": {
    "href": "api/CAF.Combat.BoxDefinitionBase.html",
    "title": "Class BoxDefinitionBase | Character Action Framework Documentation",
    "keywords": "Class BoxDefinitionBase Inheritance Object BoxDefinitionBase BoxDefinition Namespace : CAF.Combat Assembly : CAF.dll Syntax [Serializable] public class BoxDefinitionBase Constructors | Improve this Doc View Source BoxDefinitionBase() Declaration public BoxDefinitionBase() | Improve this Doc View Source BoxDefinitionBase(BoxDefinitionBase) Declaration public BoxDefinitionBase(BoxDefinitionBase other) Parameters Type Name Description BoxDefinitionBase other Fields | Improve this Doc View Source shape Declaration public BoxShapes shape Field Value Type Description BoxShapes Methods | Improve this Doc View Source DrawInspector() Declaration public virtual void DrawInspector()"
  },
  "api/CAF.Combat.BoxGroup.html": {
    "href": "api/CAF.Combat.BoxGroup.html",
    "title": "Class BoxGroup | Character Action Framework Documentation",
    "keywords": "Class BoxGroup Inheritance Object BoxGroup Namespace : CAF.Combat Assembly : CAF.dll Syntax [Serializable] public class BoxGroup Constructors | Improve this Doc View Source BoxGroup() Declaration public BoxGroup() | Improve this Doc View Source BoxGroup(BoxGroup) Declaration public BoxGroup(BoxGroup other) Parameters Type Name Description BoxGroup other Fields | Improve this Doc View Source activeFramesEnd Declaration public int activeFramesEnd Field Value Type Description Int32 | Improve this Doc View Source activeFramesStart Declaration public int activeFramesStart Field Value Type Description Int32 | Improve this Doc View Source attachToEntity Declaration public bool attachToEntity Field Value Type Description Boolean | Improve this Doc View Source boxes Declaration public List<BoxDefinitionBase> boxes Field Value Type Description List < BoxDefinitionBase > | Improve this Doc View Source chargeLevelMax Declaration public int chargeLevelMax Field Value Type Description Int32 | Improve this Doc View Source chargeLevelNeeded Declaration public int chargeLevelNeeded Field Value Type Description Int32 | Improve this Doc View Source hitboxHitInfo Declaration public HitInfoBase hitboxHitInfo Field Value Type Description HitInfoBase | Improve this Doc View Source hitGroupType Declaration public BoxGroupType hitGroupType Field Value Type Description BoxGroupType | Improve this Doc View Source ID Declaration public int ID Field Value Type Description Int32"
  },
  "api/CAF.Combat.BoxGroupType.html": {
    "href": "api/CAF.Combat.BoxGroupType.html",
    "title": "Enum BoxGroupType | Character Action Framework Documentation",
    "keywords": "Enum BoxGroupType Namespace : CAF.Combat Assembly : CAF.dll Syntax public enum BoxGroupType Fields Name Description GRAB HIT"
  },
  "api/CAF.Combat.BoxShapes.html": {
    "href": "api/CAF.Combat.BoxShapes.html",
    "title": "Enum BoxShapes | Character Action Framework Documentation",
    "keywords": "Enum BoxShapes Namespace : CAF.Combat Assembly : CAF.dll Syntax public enum BoxShapes Fields Name Description Capsule Circle Rectangle"
  },
  "api/CAF.Combat.ChargeDefinition.html": {
    "href": "api/CAF.Combat.ChargeDefinition.html",
    "title": "Class ChargeDefinition | Character Action Framework Documentation",
    "keywords": "Class ChargeDefinition Inheritance Object ChargeDefinition Namespace : CAF.Combat Assembly : CAF.dll Syntax [Serializable] public class ChargeDefinition Fields | Improve this Doc View Source chargeLevels Declaration public List<ChargeLevel> chargeLevels Field Value Type Description List < ChargeLevel > | Improve this Doc View Source frame Declaration public int frame Field Value Type Description Int32 | Improve this Doc View Source releaseOnCompletion Declaration public bool releaseOnCompletion Field Value Type Description Boolean"
  },
  "api/CAF.Combat.ChargeLevel.html": {
    "href": "api/CAF.Combat.ChargeLevel.html",
    "title": "Class ChargeLevel | Character Action Framework Documentation",
    "keywords": "Class ChargeLevel Inheritance Object ChargeLevel Namespace : CAF.Combat Assembly : CAF.dll Syntax [Serializable] public class ChargeLevel Fields | Improve this Doc View Source maxChargeFrames Declaration public int maxChargeFrames Field Value Type Description Int32"
  },
  "api/CAF.Combat.ForceType.html": {
    "href": "api/CAF.Combat.ForceType.html",
    "title": "Enum ForceType | Character Action Framework Documentation",
    "keywords": "Enum ForceType Namespace : CAF.Combat Assembly : CAF.dll Syntax public enum ForceType Fields Name Description ADDITIVE SET"
  },
  "api/CAF.Combat.HealInfoBase.html": {
    "href": "api/CAF.Combat.HealInfoBase.html",
    "title": "Class HealInfoBase | Character Action Framework Documentation",
    "keywords": "Class HealInfoBase Inheritance Object HealInfoBase Namespace : CAF.Combat Assembly : CAF.dll Syntax [Serializable] public class HealInfoBase"
  },
  "api/CAF.Combat.Hitbox2D.html": {
    "href": "api/CAF.Combat.Hitbox2D.html",
    "title": "Class Hitbox2D | Character Action Framework Documentation",
    "keywords": "Class Hitbox2D Inheritance Object HitboxBase Hitbox2D Implements ISimObject Inherited Members HitboxBase.OnHurt HitboxBase.owner HitboxBase.directionOwner HitboxBase.activated HitboxBase.hitInfo HitboxBase.ignoreList HitboxBase.hitHurtables HitboxBase.team HitboxBase.SimAwake() HitboxBase.SimStart() HitboxBase.SimUpdate() HitboxBase.SimLateUpdate() HitboxBase.Tick() HitboxBase.CheckHurtables() HitboxBase.ShouldHurt(IHurtable) Namespace : CAF.Combat Assembly : CAF.dll Syntax public class Hitbox2D : HitboxBase, ISimObject Fields | Improve this Doc View Source coll Declaration protected Collider2D coll Field Value Type Description Collider2D Methods | Improve this Doc View Source Activate() Declaration public override void Activate() Overrides HitboxBase.Activate() | Improve this Doc View Source BuildHurtInfo() Declaration protected override HurtInfoBase BuildHurtInfo() Returns Type Description HurtInfoBase Overrides HitboxBase.BuildHurtInfo() | Improve this Doc View Source CheckForHurtboxes(Collider2D) Declaration protected virtual void CheckForHurtboxes(Collider2D other) Parameters Type Name Description Collider2D other | Improve this Doc View Source CreateCapsule(Single, Single) Declaration protected virtual void CreateCapsule(float radius, float height) Parameters Type Name Description Single radius Single height | Improve this Doc View Source CreateCircle(Single) Declaration protected virtual void CreateCircle(float radius) Parameters Type Name Description Single radius | Improve this Doc View Source CreateRectangle(Vector2) Declaration protected virtual void CreateRectangle(Vector2 size) Parameters Type Name Description Vector2 size | Improve this Doc View Source Deactivate() Declaration public override void Deactivate() Overrides HitboxBase.Deactivate() | Improve this Doc View Source HurtHurtable(IHurtable) Declaration protected override void HurtHurtable(IHurtable ih) Parameters Type Name Description IHurtable ih Overrides HitboxBase.HurtHurtable(IHurtable) | Improve this Doc View Source Initialize(GameObject, Transform, Int32, BoxShapes, HitInfoBase, BoxDefinitionBase, List<IHurtable>) Declaration public override void Initialize(GameObject owner, Transform directionOwner, int team, BoxShapes shape, HitInfoBase hitInfo, BoxDefinitionBase boxDefinitionBase, List<IHurtable> ignoreList = null) Parameters Type Name Description GameObject owner Transform directionOwner Int32 team BoxShapes shape HitInfoBase hitInfo BoxDefinitionBase boxDefinitionBase List < IHurtable > ignoreList Overrides HitboxBase.Initialize(GameObject, Transform, Int32, BoxShapes, HitInfoBase, BoxDefinitionBase, List<IHurtable>) | Improve this Doc View Source Initialize(GameObject, Transform, Int32, HitInfoBase, List<IHurtable>) Declaration public override void Initialize(GameObject owner, Transform directionOwner, int team, HitInfoBase hitInfo, List<IHurtable> ignoreList = null) Parameters Type Name Description GameObject owner Transform directionOwner Int32 team HitInfoBase hitInfo List < IHurtable > ignoreList Overrides HitboxBase.Initialize(GameObject, Transform, Int32, HitInfoBase, List<IHurtable>) | Improve this Doc View Source OnTriggerStay2D(Collider2D) Declaration protected void OnTriggerStay2D(Collider2D other) Parameters Type Name Description Collider2D other | Improve this Doc View Source ReActivate(List<IHurtable>) Declaration public override void ReActivate(List<IHurtable> ignoreList = null) Parameters Type Name Description List < IHurtable > ignoreList Overrides HitboxBase.ReActivate(List<IHurtable>) Implements ISimObject"
  },
  "api/CAF.Combat.Hitbox3D.html": {
    "href": "api/CAF.Combat.Hitbox3D.html",
    "title": "Class Hitbox3D | Character Action Framework Documentation",
    "keywords": "Class Hitbox3D Inheritance Object HitboxBase Hitbox3D Implements ISimObject Inherited Members HitboxBase.OnHurt HitboxBase.owner HitboxBase.directionOwner HitboxBase.activated HitboxBase.hitInfo HitboxBase.ignoreList HitboxBase.hitHurtables HitboxBase.team HitboxBase.SimAwake() HitboxBase.SimStart() HitboxBase.SimUpdate() HitboxBase.SimLateUpdate() HitboxBase.ReActivate(List<IHurtable>) HitboxBase.Tick() HitboxBase.CheckHurtables() HitboxBase.ShouldHurt(IHurtable) Namespace : CAF.Combat Assembly : CAF.dll Syntax public class Hitbox3D : HitboxBase, ISimObject Fields | Improve this Doc View Source coll Declaration protected Collider coll Field Value Type Description Collider Methods | Improve this Doc View Source Activate() Declaration public override void Activate() Overrides HitboxBase.Activate() | Improve this Doc View Source BuildHurtInfo() Declaration protected override HurtInfoBase BuildHurtInfo() Returns Type Description HurtInfoBase Overrides HitboxBase.BuildHurtInfo() | Improve this Doc View Source CheckForHurtboxes(Collider) Called in OnTriggerStay to check for any hurtboxes within the hitbox. If any are found, they are added to a list to be handled next tick. Declaration protected virtual void CheckForHurtboxes(Collider other) Parameters Type Name Description Collider other The hurtbox that collided with this hitbox. | Improve this Doc View Source CreateCapsule(Single, Single) Declaration protected virtual void CreateCapsule(float radius, float height) Parameters Type Name Description Single radius Single height | Improve this Doc View Source CreateRectangle(Vector3) Initializes the hitbox as a rectangle type hitbox. Declaration protected virtual void CreateRectangle(Vector3 size) Parameters Type Name Description Vector3 size The size of the hitbox. | Improve this Doc View Source CreateSphere(Single) Declaration protected virtual void CreateSphere(float radius) Parameters Type Name Description Single radius | Improve this Doc View Source Deactivate() Declaration public override void Deactivate() Overrides HitboxBase.Deactivate() | Improve this Doc View Source HurtHurtable(IHurtable) Declaration protected override void HurtHurtable(IHurtable ih) Parameters Type Name Description IHurtable ih Overrides HitboxBase.HurtHurtable(IHurtable) | Improve this Doc View Source Initialize(GameObject, Transform, Int32, BoxShapes, HitInfoBase, BoxDefinitionBase, List<IHurtable>) Declaration public override void Initialize(GameObject owner, Transform directionOwner, int team, BoxShapes shape, HitInfoBase hitInfo, BoxDefinitionBase boxDefinitionBase, List<IHurtable> ignoreList = null) Parameters Type Name Description GameObject owner Transform directionOwner Int32 team BoxShapes shape HitInfoBase hitInfo BoxDefinitionBase boxDefinitionBase List < IHurtable > ignoreList Overrides HitboxBase.Initialize(GameObject, Transform, Int32, BoxShapes, HitInfoBase, BoxDefinitionBase, List<IHurtable>) | Improve this Doc View Source Initialize(GameObject, Transform, Int32, HitInfoBase, List<IHurtable>) Declaration public override void Initialize(GameObject owner, Transform directionOwner, int team, HitInfoBase hitInfo, List<IHurtable> ignoreList = null) Parameters Type Name Description GameObject owner Transform directionOwner Int32 team HitInfoBase hitInfo List < IHurtable > ignoreList Overrides HitboxBase.Initialize(GameObject, Transform, Int32, HitInfoBase, List<IHurtable>) | Improve this Doc View Source OnTriggerStay(Collider) Declaration protected virtual void OnTriggerStay(Collider other) Parameters Type Name Description Collider other Implements ISimObject"
  },
  "api/CAF.Combat.HitboxBase.html": {
    "href": "api/CAF.Combat.HitboxBase.html",
    "title": "Class HitboxBase | Character Action Framework Documentation",
    "keywords": "Class HitboxBase Inheritance Object HitboxBase Hitbox2D Hitbox3D Implements ISimObject Namespace : CAF.Combat Assembly : CAF.dll Syntax public abstract class HitboxBase : MonoBehaviour, ISimObject Fields | Improve this Doc View Source activated Declaration protected bool activated Field Value Type Description Boolean | Improve this Doc View Source directionOwner Declaration protected Transform directionOwner Field Value Type Description Transform | Improve this Doc View Source hitHurtables Declaration public List<GameObject> hitHurtables Field Value Type Description List < GameObject > | Improve this Doc View Source hitInfo Declaration public HitInfoBase hitInfo Field Value Type Description HitInfoBase | Improve this Doc View Source ignoreList Declaration public List<IHurtable> ignoreList Field Value Type Description List < IHurtable > | Improve this Doc View Source owner Declaration protected GameObject owner Field Value Type Description GameObject | Improve this Doc View Source team Declaration public int team Field Value Type Description Int32 Methods | Improve this Doc View Source Activate() Declaration public virtual void Activate() | Improve this Doc View Source BuildHurtInfo() Declaration protected virtual HurtInfoBase BuildHurtInfo() Returns Type Description HurtInfoBase | Improve this Doc View Source CheckHurtables() Declaration protected virtual void CheckHurtables() | Improve this Doc View Source Deactivate() Deactivates the hitbox. Declaration public virtual void Deactivate() | Improve this Doc View Source HurtHurtable(IHurtable) Declaration protected virtual void HurtHurtable(IHurtable ih) Parameters Type Name Description IHurtable ih | Improve this Doc View Source Initialize(GameObject, Transform, Int32, BoxShapes, HitInfoBase, BoxDefinitionBase, List<IHurtable>) Declaration public abstract void Initialize(GameObject owner, Transform directionOwner, int team, BoxShapes shape, HitInfoBase hitInfo, BoxDefinitionBase boxDefinition, List<IHurtable> ignoreList = null) Parameters Type Name Description GameObject owner Transform directionOwner Int32 team BoxShapes shape HitInfoBase hitInfo BoxDefinitionBase boxDefinition List < IHurtable > ignoreList | Improve this Doc View Source Initialize(GameObject, Transform, Int32, HitInfoBase, List<IHurtable>) Declaration public abstract void Initialize(GameObject owner, Transform directionOwner, int team, HitInfoBase hitInfo, List<IHurtable> ignoreList = null) Parameters Type Name Description GameObject owner Transform directionOwner Int32 team HitInfoBase hitInfo List < IHurtable > ignoreList | Improve this Doc View Source ReActivate(List<IHurtable>) Reactivates the hitbox, settings it's parameters back to their defaults. Declaration public virtual void ReActivate(List<IHurtable> ignoreList = null) Parameters Type Name Description List < IHurtable > ignoreList | Improve this Doc View Source ShouldHurt(IHurtable) Declaration protected virtual bool ShouldHurt(IHurtable ih) Parameters Type Name Description IHurtable ih Returns Type Description Boolean | Improve this Doc View Source SimAwake() Declaration public void SimAwake() | Improve this Doc View Source SimLateUpdate() Declaration public void SimLateUpdate() | Improve this Doc View Source SimStart() Declaration public void SimStart() | Improve this Doc View Source SimUpdate() Declaration public void SimUpdate() | Improve this Doc View Source Tick() Declaration public virtual void Tick() Events | Improve this Doc View Source OnHurt Declaration public virtual event HitboxBase.HurtAction OnHurt Event Type Type Description HitboxBase.HurtAction Implements ISimObject"
  },
  "api/CAF.Combat.HitboxBase.HurtAction.html": {
    "href": "api/CAF.Combat.HitboxBase.HurtAction.html",
    "title": "Delegate HitboxBase.HurtAction | Character Action Framework Documentation",
    "keywords": "Delegate HitboxBase.HurtAction Namespace : CAF.Combat Assembly : CAF.dll Syntax public delegate void HurtAction(GameObject hurtableHit, HitInfoBase hitInfo); Parameters Type Name Description GameObject hurtableHit HitInfoBase hitInfo"
  },
  "api/CAF.Combat.HitboxForceRelation.html": {
    "href": "api/CAF.Combat.HitboxForceRelation.html",
    "title": "Enum HitboxForceRelation | Character Action Framework Documentation",
    "keywords": "Enum HitboxForceRelation Namespace : CAF.Combat Assembly : CAF.dll Syntax public enum HitboxForceRelation Fields Name Description ATTACKER HITBOX WORLD"
  },
  "api/CAF.Combat.HitboxForceType.html": {
    "href": "api/CAF.Combat.HitboxForceType.html",
    "title": "Enum HitboxForceType | Character Action Framework Documentation",
    "keywords": "Enum HitboxForceType Namespace : CAF.Combat Assembly : CAF.dll Syntax public enum HitboxForceType Fields Name Description PULL PUSH SET"
  },
  "api/CAF.Combat.HitInfo.html": {
    "href": "api/CAF.Combat.HitInfo.html",
    "title": "Class HitInfo | Character Action Framework Documentation",
    "keywords": "Class HitInfo Inheritance Object HitInfoBase HitInfo Inherited Members HitInfoBase.airOnly HitInfoBase.groundOnly HitInfoBase.hitKills HitInfoBase.continuousHit HitInfoBase.spaceBetweenHits HitInfoBase.opponentResetXForce HitInfoBase.opponentResetYForce HitInfoBase.attackerHitstop HitInfoBase.hitstop HitInfoBase.hitstun HitInfoBase.forceType HitInfoBase.forceRelation Namespace : CAF.Combat Assembly : CAF.dll Syntax [Serializable] public class HitInfo : HitInfoBase Constructors | Improve this Doc View Source HitInfo() Declaration public HitInfo() | Improve this Doc View Source HitInfo(HitInfo) Declaration public HitInfo(HitInfo other) Parameters Type Name Description HitInfo other Fields | Improve this Doc View Source breakArmor Declaration public bool breakArmor Field Value Type Description Boolean | Improve this Doc View Source causesTumble Declaration public bool causesTumble Field Value Type Description Boolean | Improve this Doc View Source damageOnBlock Declaration public float damageOnBlock Field Value Type Description Single | Improve this Doc View Source damageOnHit Declaration public float damageOnHit Field Value Type Description Single | Improve this Doc View Source forceIncludeYForce Declaration public bool forceIncludeYForce Field Value Type Description Boolean | Improve this Doc View Source groundBounceForce Declaration public float groundBounceForce Field Value Type Description Single | Improve this Doc View Source groundBounces Declaration public bool groundBounces Field Value Type Description Boolean | Improve this Doc View Source knockdown Declaration public bool knockdown Field Value Type Description Boolean | Improve this Doc View Source opponentForceDir Declaration public Vector3 opponentForceDir Field Value Type Description Vector3 | Improve this Doc View Source opponentForceMagnitude Declaration public float opponentForceMagnitude Field Value Type Description Single | Improve this Doc View Source opponentMaxMagnitude Declaration public float opponentMaxMagnitude Field Value Type Description Single | Improve this Doc View Source opponentMinMagnitude Declaration public float opponentMinMagnitude Field Value Type Description Single | Improve this Doc View Source throwConfirm Declaration public AttackDefinition throwConfirm Field Value Type Description AttackDefinition | Improve this Doc View Source unblockable Declaration public bool unblockable Field Value Type Description Boolean | Improve this Doc View Source wallBounceForce Declaration public float wallBounceForce Field Value Type Description Single | Improve this Doc View Source wallBounces Declaration public bool wallBounces Field Value Type Description Boolean Methods | Improve this Doc View Source DrawHitDamageOptions() Declaration protected virtual void DrawHitDamageOptions() | Improve this Doc View Source DrawHitEffectsOptions() Declaration protected virtual void DrawHitEffectsOptions() | Improve this Doc View Source DrawHitForcesOptions() Declaration protected virtual void DrawHitForcesOptions() | Improve this Doc View Source DrawHitStunOptions() Declaration protected virtual void DrawHitStunOptions() | Improve this Doc View Source DrawInspectorGrabInfo() Declaration public override void DrawInspectorGrabInfo() Overrides HitInfoBase.DrawInspectorGrabInfo() | Improve this Doc View Source DrawInspectorHitInfo() Declaration public override void DrawInspectorHitInfo() Overrides HitInfoBase.DrawInspectorHitInfo()"
  },
  "api/CAF.Combat.HitInfoBase.html": {
    "href": "api/CAF.Combat.HitInfoBase.html",
    "title": "Class HitInfoBase | Character Action Framework Documentation",
    "keywords": "Class HitInfoBase Inheritance Object HitInfoBase HitInfo Namespace : CAF.Combat Assembly : CAF.dll Syntax [Serializable] public class HitInfoBase Fields | Improve this Doc View Source airOnly Declaration public bool airOnly Field Value Type Description Boolean | Improve this Doc View Source attackerHitstop Declaration public ushort attackerHitstop Field Value Type Description UInt16 | Improve this Doc View Source continuousHit Declaration public bool continuousHit Field Value Type Description Boolean | Improve this Doc View Source forceRelation Declaration public HitboxForceRelation forceRelation Field Value Type Description HitboxForceRelation | Improve this Doc View Source forceType Declaration public HitboxForceType forceType Field Value Type Description HitboxForceType | Improve this Doc View Source groundOnly Declaration public bool groundOnly Field Value Type Description Boolean | Improve this Doc View Source hitKills Declaration public bool hitKills Field Value Type Description Boolean | Improve this Doc View Source hitstop Declaration public ushort hitstop Field Value Type Description UInt16 | Improve this Doc View Source hitstun Declaration public ushort hitstun Field Value Type Description UInt16 | Improve this Doc View Source opponentResetXForce Declaration public bool opponentResetXForce Field Value Type Description Boolean | Improve this Doc View Source opponentResetYForce Declaration public bool opponentResetYForce Field Value Type Description Boolean | Improve this Doc View Source spaceBetweenHits Declaration public int spaceBetweenHits Field Value Type Description Int32 Methods | Improve this Doc View Source DrawInspectorGrabInfo() Declaration public virtual void DrawInspectorGrabInfo() | Improve this Doc View Source DrawInspectorHitInfo() Declaration public virtual void DrawInspectorHitInfo()"
  },
  "api/CAF.Combat.HitReaction.html": {
    "href": "api/CAF.Combat.HitReaction.html",
    "title": "Struct HitReaction | Character Action Framework Documentation",
    "keywords": "Struct HitReaction Namespace : CAF.Combat Assembly : CAF.dll Syntax public struct HitReaction Fields | Improve this Doc View Source reactionType Declaration public HitReactionType reactionType Field Value Type Description HitReactionType"
  },
  "api/CAF.Combat.HitReactionType.html": {
    "href": "api/CAF.Combat.HitReactionType.html",
    "title": "Enum HitReactionType | Character Action Framework Documentation",
    "keywords": "Enum HitReactionType Namespace : CAF.Combat Assembly : CAF.dll Syntax public enum HitReactionType Fields Name Description Armored Avoided Blocked Hit"
  },
  "api/CAF.Combat.html": {
    "href": "api/CAF.Combat.html",
    "title": "Namespace CAF.Combat | Character Action Framework Documentation",
    "keywords": "Namespace CAF.Combat Classes AttackDefinition AttackDefinitionEditor AttackDefinitionEditorWindow AttackEvent AttackEventDefinition AttackEventVariables BoxDefinition Default implementation of BoxDefinitionBase. BoxDefinitionBase BoxGroup ChargeDefinition ChargeLevel HealInfoBase Hitbox2D Hitbox3D HitboxBase HitInfo HitInfoBase Hurtbox HurtboxGroup HurtInfo2D HurtInfo3D HurtInfoBase MovesetAttackNode MovesetAttackNode.nextNodeDefinition MovesetAttackNodeEditor MovesetDefinition StateHurtboxDefinition StateHurtboxDefinitionEditor Structs HitReaction Interfaces IHurtable ITargetable Enums AttackEventInputCheckTiming BoxGroupType BoxShapes ForceType HitboxForceRelation HitboxForceType HitReactionType HurtboxState Delegates HitboxBase.HurtAction"
  },
  "api/CAF.Combat.Hurtbox.html": {
    "href": "api/CAF.Combat.Hurtbox.html",
    "title": "Class Hurtbox | Character Action Framework Documentation",
    "keywords": "Class Hurtbox Inheritance Object Hurtbox Namespace : CAF.Combat Assembly : CAF.dll Syntax public class Hurtbox : MonoBehaviour Fields | Improve this Doc View Source owner Declaration protected GameObject owner Field Value Type Description GameObject Properties | Improve this Doc View Source Hurtable Declaration public IHurtable Hurtable { get; } Property Value Type Description IHurtable | Improve this Doc View Source Owner Declaration public GameObject Owner { get; set; } Property Value Type Description GameObject"
  },
  "api/CAF.Combat.HurtboxGroup.html": {
    "href": "api/CAF.Combat.HurtboxGroup.html",
    "title": "Class HurtboxGroup | Character Action Framework Documentation",
    "keywords": "Class HurtboxGroup Inheritance Object HurtboxGroup Namespace : CAF.Combat Assembly : CAF.dll Syntax [Serializable] public class HurtboxGroup Constructors | Improve this Doc View Source HurtboxGroup() Declaration public HurtboxGroup() | Improve this Doc View Source HurtboxGroup(HurtboxGroup) Declaration public HurtboxGroup(HurtboxGroup other) Parameters Type Name Description HurtboxGroup other Fields | Improve this Doc View Source activeFramesEnd Declaration public int activeFramesEnd Field Value Type Description Int32 | Improve this Doc View Source activeFramesStart Declaration public int activeFramesStart Field Value Type Description Int32 | Improve this Doc View Source attachTo Declaration public string attachTo Field Value Type Description String | Improve this Doc View Source attachToEntity Declaration public bool attachToEntity Field Value Type Description Boolean | Improve this Doc View Source boxDefinitionTypes Declaration [NonSerialized] protected Dictionary<string, Type> boxDefinitionTypes Field Value Type Description Dictionary < String , Type > | Improve this Doc View Source boxes Declaration public List<BoxDefinitionBase> boxes Field Value Type Description List < BoxDefinitionBase > | Improve this Doc View Source boxesDropdown Declaration [NonSerialized] protected bool boxesDropdown Field Value Type Description Boolean | Improve this Doc View Source ID Declaration public int ID Field Value Type Description Int32 Methods | Improve this Doc View Source DrawInspector(Single) Declaration public virtual void DrawInspector(float indentLevel) Parameters Type Name Description Single indentLevel | Improve this Doc View Source OnBoxDefinitionTypeSelected(Object) Declaration protected virtual void OnBoxDefinitionTypeSelected(object t) Parameters Type Name Description Object t"
  },
  "api/CAF.Combat.HurtboxState.html": {
    "href": "api/CAF.Combat.HurtboxState.html",
    "title": "Enum HurtboxState | Character Action Framework Documentation",
    "keywords": "Enum HurtboxState Namespace : CAF.Combat Assembly : CAF.dll Syntax public enum HurtboxState Fields Name Description INVINCIBLE VULNERABLE"
  },
  "api/CAF.Combat.HurtInfo2D.html": {
    "href": "api/CAF.Combat.HurtInfo2D.html",
    "title": "Class HurtInfo2D | Character Action Framework Documentation",
    "keywords": "Class HurtInfo2D Inheritance Object HurtInfoBase HurtInfo2D Inherited Members HurtInfoBase.hitInfo Namespace : CAF.Combat Assembly : CAF.dll Syntax public class HurtInfo2D : HurtInfoBase Constructors | Improve this Doc View Source HurtInfo2D() Declaration public HurtInfo2D() | Improve this Doc View Source HurtInfo2D(HitInfoBase, Vector2, Int32) Declaration public HurtInfo2D(HitInfoBase hitInfo, Vector2 center, int faceDirection) Parameters Type Name Description HitInfoBase hitInfo Vector2 center Int32 faceDirection Fields | Improve this Doc View Source center Declaration public Vector2 center Field Value Type Description Vector2 | Improve this Doc View Source faceDirection Declaration public int faceDirection Field Value Type Description Int32"
  },
  "api/CAF.Combat.HurtInfo3D.html": {
    "href": "api/CAF.Combat.HurtInfo3D.html",
    "title": "Class HurtInfo3D | Character Action Framework Documentation",
    "keywords": "Class HurtInfo3D Inheritance Object HurtInfoBase HurtInfo3D Inherited Members HurtInfoBase.hitInfo Namespace : CAF.Combat Assembly : CAF.dll Syntax public class HurtInfo3D : HurtInfoBase Constructors | Improve this Doc View Source HurtInfo3D() Declaration public HurtInfo3D() | Improve this Doc View Source HurtInfo3D(HitInfoBase, Vector3, Vector3, Vector3) Declaration public HurtInfo3D(HitInfoBase hitInfo, Vector3 center, Vector3 forward, Vector3 right) Parameters Type Name Description HitInfoBase hitInfo Vector3 center Vector3 forward Vector3 right Fields | Improve this Doc View Source center Declaration public Vector3 center Field Value Type Description Vector3 | Improve this Doc View Source forward Declaration public Vector3 forward Field Value Type Description Vector3 | Improve this Doc View Source right Declaration public Vector3 right Field Value Type Description Vector3"
  },
  "api/CAF.Combat.HurtInfoBase.html": {
    "href": "api/CAF.Combat.HurtInfoBase.html",
    "title": "Class HurtInfoBase | Character Action Framework Documentation",
    "keywords": "Class HurtInfoBase Inheritance Object HurtInfoBase HurtInfo2D HurtInfo3D Namespace : CAF.Combat Assembly : CAF.dll Syntax public class HurtInfoBase Constructors | Improve this Doc View Source HurtInfoBase() Declaration public HurtInfoBase() | Improve this Doc View Source HurtInfoBase(HitInfoBase) Declaration public HurtInfoBase(HitInfoBase hitInfo) Parameters Type Name Description HitInfoBase hitInfo Fields | Improve this Doc View Source hitInfo Declaration public HitInfoBase hitInfo Field Value Type Description HitInfoBase"
  },
  "api/CAF.Combat.IHurtable.html": {
    "href": "api/CAF.Combat.IHurtable.html",
    "title": "Interface IHurtable | Character Action Framework Documentation",
    "keywords": "Interface IHurtable Namespace : CAF.Combat Assembly : CAF.dll Syntax public interface IHurtable Methods | Improve this Doc View Source GetTeam() Declaration int GetTeam() Returns Type Description Int32 | Improve this Doc View Source Heal(HealInfoBase) Declaration void Heal(HealInfoBase healInfo) Parameters Type Name Description HealInfoBase healInfo | Improve this Doc View Source Hurt(HurtInfoBase) Declaration HitReaction Hurt(HurtInfoBase hurtInfo) Parameters Type Name Description HurtInfoBase hurtInfo Returns Type Description HitReaction"
  },
  "api/CAF.Combat.ITargetable.html": {
    "href": "api/CAF.Combat.ITargetable.html",
    "title": "Interface ITargetable | Character Action Framework Documentation",
    "keywords": "Interface ITargetable Namespace : CAF.Combat Assembly : CAF.dll Syntax public interface ITargetable Properties | Improve this Doc View Source Targetable If this object is currently targetable. Declaration bool Targetable { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source GetGameObject() The object that's being targeted. Declaration GameObject GetGameObject() Returns Type Description GameObject"
  },
  "api/CAF.Combat.MovesetAttackNode.html": {
    "href": "api/CAF.Combat.MovesetAttackNode.html",
    "title": "Class MovesetAttackNode | Character Action Framework Documentation",
    "keywords": "Class MovesetAttackNode Inheritance Object MovesetAttackNode Namespace : CAF.Combat Assembly : CAF.dll Syntax [Serializable] public class MovesetAttackNode : Node Fields | Improve this Doc View Source attackDefinition Declaration public AttackDefinition attackDefinition Field Value Type Description AttackDefinition | Improve this Doc View Source inputSequence Declaration public InputSequence inputSequence Field Value Type Description InputSequence | Improve this Doc View Source lastNode Declaration public MovesetAttackNode lastNode Field Value Type Description MovesetAttackNode | Improve this Doc View Source nextNode Declaration public List<MovesetAttackNode.nextNodeDefinition> nextNode Field Value Type Description List < MovesetAttackNode.nextNodeDefinition > Methods | Improve this Doc View Source GetValue(NodePort) Declaration public override object GetValue(NodePort port) Parameters Type Name Description NodePort port Returns Type Description Object | Improve this Doc View Source OnCreateConnection(NodePort, NodePort) Declaration public override void OnCreateConnection(NodePort from, NodePort to) Parameters Type Name Description NodePort from NodePort to"
  },
  "api/CAF.Combat.MovesetAttackNode.nextNodeDefinition.html": {
    "href": "api/CAF.Combat.MovesetAttackNode.nextNodeDefinition.html",
    "title": "Class MovesetAttackNode.nextNodeDefinition | Character Action Framework Documentation",
    "keywords": "Class MovesetAttackNode.nextNodeDefinition Inheritance Object MovesetAttackNode.nextNodeDefinition Namespace : CAF.Combat Assembly : CAF.dll Syntax [Serializable] public class nextNodeDefinition Fields | Improve this Doc View Source cancelWindow Declaration public Vector2Int cancelWindow Field Value Type Description Vector2Int | Improve this Doc View Source node Declaration public MovesetAttackNode node Field Value Type Description MovesetAttackNode"
  },
  "api/CAF.Combat.MovesetAttackNodeEditor.html": {
    "href": "api/CAF.Combat.MovesetAttackNodeEditor.html",
    "title": "Class MovesetAttackNodeEditor | Character Action Framework Documentation",
    "keywords": "Class MovesetAttackNodeEditor Inheritance Object MovesetAttackNodeEditor Namespace : CAF.Combat Assembly : CAF.Editor.dll Syntax public class MovesetAttackNodeEditor : NodeEditor Methods | Improve this Doc View Source OnBodyGUI() Declaration public override void OnBodyGUI() | Improve this Doc View Source OnCreate() Declaration public override void OnCreate()"
  },
  "api/CAF.Combat.MovesetDefinition.html": {
    "href": "api/CAF.Combat.MovesetDefinition.html",
    "title": "Class MovesetDefinition | Character Action Framework Documentation",
    "keywords": "Class MovesetDefinition Inheritance Object MovesetDefinition Namespace : CAF.Combat Assembly : CAF.dll Syntax public class MovesetDefinition : NodeGraph Fields | Improve this Doc View Source airAttackCommandNormals Declaration public List<MovesetAttackNode> airAttackCommandNormals Field Value Type Description List < MovesetAttackNode > | Improve this Doc View Source airAttackStartNodes Declaration public List<MovesetAttackNode> airAttackStartNodes Field Value Type Description List < MovesetAttackNode > | Improve this Doc View Source groundAttackCommandNormals Declaration public List<MovesetAttackNode> groundAttackCommandNormals Field Value Type Description List < MovesetAttackNode > | Improve this Doc View Source groundAttackStartNodes Declaration public List<MovesetAttackNode> groundAttackStartNodes Field Value Type Description List < MovesetAttackNode >"
  },
  "api/CAF.Combat.StateHurtboxDefinition.html": {
    "href": "api/CAF.Combat.StateHurtboxDefinition.html",
    "title": "Class StateHurtboxDefinition | Character Action Framework Documentation",
    "keywords": "Class StateHurtboxDefinition Inheritance Object StateHurtboxDefinition Namespace : CAF.Combat Assembly : CAF.dll Syntax public class StateHurtboxDefinition : ScriptableObject Fields | Improve this Doc View Source hurtboxGroups Declaration public List<HurtboxGroup> hurtboxGroups Field Value Type Description List < HurtboxGroup >"
  },
  "api/CAF.Combat.StateHurtboxDefinitionEditor.html": {
    "href": "api/CAF.Combat.StateHurtboxDefinitionEditor.html",
    "title": "Class StateHurtboxDefinitionEditor | Character Action Framework Documentation",
    "keywords": "Class StateHurtboxDefinitionEditor Inheritance Object StateHurtboxDefinitionEditor Namespace : CAF.Combat Assembly : CAF.Editor.dll Syntax public class StateHurtboxDefinitionEditor : Editor Fields | Improve this Doc View Source hurtboxGroupTypes Declaration protected Dictionary<string, Type> hurtboxGroupTypes Field Value Type Description Dictionary < String , Type > Methods | Improve this Doc View Source OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/CAF.Fighters.FighterBase.html": {
    "href": "api/CAF.Fighters.FighterBase.html",
    "title": "Class FighterBase | Character Action Framework Documentation",
    "keywords": "Class FighterBase Inheritance Object FighterBase Implements ITargetable Namespace : CAF.Fighters Assembly : CAF.dll Syntax public class FighterBase : MonoBehaviour, ITargetable Fields | Improve this Doc View Source combatManager Declaration protected FighterCombatManager combatManager Field Value Type Description FighterCombatManager | Improve this Doc View Source hurtboxManager Declaration protected FighterHurtboxManager hurtboxManager Field Value Type Description FighterHurtboxManager | Improve this Doc View Source inputManager Declaration protected FighterInputManager inputManager Field Value Type Description FighterInputManager | Improve this Doc View Source lookHandler Declaration public LookHandler lookHandler Field Value Type Description LookHandler | Improve this Doc View Source physicsManager Declaration protected FighterPhysicsManagerBase physicsManager Field Value Type Description FighterPhysicsManagerBase | Improve this Doc View Source stateManager Declaration protected FighterStateManager stateManager Field Value Type Description FighterStateManager | Improve this Doc View Source targetable Declaration protected bool targetable Field Value Type Description Boolean | Improve this Doc View Source visual Declaration public GameObject visual Field Value Type Description GameObject Properties | Improve this Doc View Source CombatManager Declaration public FighterCombatManager CombatManager { get; } Property Value Type Description FighterCombatManager | Improve this Doc View Source HurtboxManager Declaration public FighterHurtboxManager HurtboxManager { get; } Property Value Type Description FighterHurtboxManager | Improve this Doc View Source InputManager Declaration public FighterInputManager InputManager { get; } Property Value Type Description FighterInputManager | Improve this Doc View Source IsGrounded Declaration public bool IsGrounded { get; set; } Property Value Type Description Boolean | Improve this Doc View Source PhysicsManager Declaration public FighterPhysicsManagerBase PhysicsManager { get; } Property Value Type Description FighterPhysicsManagerBase | Improve this Doc View Source StateManager Declaration public FighterStateManager StateManager { get; } Property Value Type Description FighterStateManager | Improve this Doc View Source Targetable Declaration public virtual bool Targetable { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source GetGameObject() Declaration public GameObject GetGameObject() Returns Type Description GameObject | Improve this Doc View Source GetMovementVector(Single, Single) Translates the given vector based on the look transform's forward. Declaration public virtual Vector3 GetMovementVector(float horizontal, float vertical) Parameters Type Name Description Single horizontal The horizontal axis of the vector. Single vertical The vertical axis of the vector. Returns Type Description Vector3 A direction vector based on the camera's forward. | Improve this Doc View Source GetVisualBasedDirection(Vector3) Transforms the given direction into one based on the visual's forward. Declaration public virtual Vector3 GetVisualBasedDirection(Vector3 direction) Parameters Type Name Description Vector3 direction The direction vector. Returns Type Description Vector3 A direction vector based on the visual's forward. | Improve this Doc View Source HandleLockon() Handles finding and locking on to targets. Declaration protected virtual void HandleLockon() | Improve this Doc View Source LateTick() Declaration public virtual void LateTick() | Improve this Doc View Source RotateVisual(Vector3, Single) Rotate the visual towards the given direction based on the speed given. Declaration public virtual void RotateVisual(Vector3 direction, float speed) Parameters Type Name Description Vector3 direction The direction to rotate towards. Single speed The speed of the rotation. | Improve this Doc View Source SetTargetable(Boolean) Declaration public void SetTargetable(bool value) Parameters Type Name Description Boolean value | Improve this Doc View Source SetVisualRotation(Vector3) Set the visual's rotation to the given direction. Declaration public virtual void SetVisualRotation(Vector3 direction) Parameters Type Name Description Vector3 direction The direction to set the rotation to. | Improve this Doc View Source Tick() Declaration public virtual void Tick() Implements ITargetable"
  },
  "api/CAF.Fighters.FighterCombatManager.ChargeLevelChangedAction.html": {
    "href": "api/CAF.Fighters.FighterCombatManager.ChargeLevelChangedAction.html",
    "title": "Delegate FighterCombatManager.ChargeLevelChangedAction | Character Action Framework Documentation",
    "keywords": "Delegate FighterCombatManager.ChargeLevelChangedAction Namespace : CAF.Fighters Assembly : CAF.dll Syntax public delegate void ChargeLevelChangedAction(FighterBase self, int lastChargeLevel); Parameters Type Name Description FighterBase self Int32 lastChargeLevel"
  },
  "api/CAF.Fighters.FighterCombatManager.ChargeLevelChargeChangedAction.html": {
    "href": "api/CAF.Fighters.FighterCombatManager.ChargeLevelChargeChangedAction.html",
    "title": "Delegate FighterCombatManager.ChargeLevelChargeChangedAction | Character Action Framework Documentation",
    "keywords": "Delegate FighterCombatManager.ChargeLevelChargeChangedAction Namespace : CAF.Fighters Assembly : CAF.dll Syntax public delegate void ChargeLevelChargeChangedAction(FighterBase self, int lastChargeLevelCharge); Parameters Type Name Description FighterBase self Int32 lastChargeLevelCharge"
  },
  "api/CAF.Fighters.FighterCombatManager.EmptyAction.html": {
    "href": "api/CAF.Fighters.FighterCombatManager.EmptyAction.html",
    "title": "Delegate FighterCombatManager.EmptyAction | Character Action Framework Documentation",
    "keywords": "Delegate FighterCombatManager.EmptyAction Namespace : CAF.Fighters Assembly : CAF.dll Syntax public delegate void EmptyAction(FighterBase self); Parameters Type Name Description FighterBase self"
  },
  "api/CAF.Fighters.FighterCombatManager.HealthChangedAction.html": {
    "href": "api/CAF.Fighters.FighterCombatManager.HealthChangedAction.html",
    "title": "Delegate FighterCombatManager.HealthChangedAction | Character Action Framework Documentation",
    "keywords": "Delegate FighterCombatManager.HealthChangedAction Namespace : CAF.Fighters Assembly : CAF.dll Syntax public delegate void HealthChangedAction(FighterBase initializer, FighterBase self, HitInfoBase hitInfo); Parameters Type Name Description FighterBase initializer FighterBase self HitInfoBase hitInfo"
  },
  "api/CAF.Fighters.FighterCombatManager.html": {
    "href": "api/CAF.Fighters.FighterCombatManager.html",
    "title": "Class FighterCombatManager | Character Action Framework Documentation",
    "keywords": "Class FighterCombatManager Inheritance Object FighterCombatManager Implements IHurtable Namespace : CAF.Fighters Assembly : CAF.dll Syntax public class FighterCombatManager : MonoBehaviour, IHurtable Fields | Improve this Doc View Source hitboxManager Declaration public FighterHitboxManager hitboxManager Field Value Type Description FighterHitboxManager | Improve this Doc View Source hitstop Declaration protected int hitstop Field Value Type Description Int32 | Improve this Doc View Source hitstun Declaration protected int hitstun Field Value Type Description Int32 | Improve this Doc View Source manager Declaration public FighterBase manager Field Value Type Description FighterBase Properties | Improve this Doc View Source CurrentAttack Declaration public MovesetAttackNode CurrentAttack { get; protected set; } Property Value Type Description MovesetAttackNode | Improve this Doc View Source CurrentChargeLevel Declaration public int CurrentChargeLevel { get; protected set; } Property Value Type Description Int32 | Improve this Doc View Source CurrentChargeLevelCharge Declaration public int CurrentChargeLevelCharge { get; protected set; } Property Value Type Description Int32 | Improve this Doc View Source CurrentMoveset Declaration public MovesetDefinition CurrentMoveset { get; protected set; } Property Value Type Description MovesetDefinition | Improve this Doc View Source HitStop Declaration public int HitStop { get; set; } Property Value Type Description Int32 | Improve this Doc View Source HitStun Declaration public int HitStun { get; set; } Property Value Type Description Int32 | Improve this Doc View Source LastHitBy Declaration public HitInfoBase LastHitBy { get; protected set; } Property Value Type Description HitInfoBase Methods | Improve this Doc View Source AddHitStop(Int32) Declaration public virtual void AddHitStop(int value) Parameters Type Name Description Int32 value | Improve this Doc View Source AddHitStun(Int32) Declaration public virtual void AddHitStun(int value) Parameters Type Name Description Int32 value | Improve this Doc View Source Awake() Declaration protected virtual void Awake() | Improve this Doc View Source CheckAttackNode(MovesetAttackNode) Declaration protected virtual MovesetAttackNode CheckAttackNode(MovesetAttackNode node) Parameters Type Name Description MovesetAttackNode node Returns Type Description MovesetAttackNode | Improve this Doc View Source CheckAttackNodes<T>(ref List<T>) Declaration protected virtual MovesetAttackNode CheckAttackNodes<T>(ref List<T> nodes) where T : MovesetAttackNode Parameters Type Name Description List <T> nodes Returns Type Description MovesetAttackNode Type Parameters Name Description T | Improve this Doc View Source CheckCurrentAttackCancelWindows() Declaration protected virtual MovesetAttackNode CheckCurrentAttackCancelWindows() Returns Type Description MovesetAttackNode | Improve this Doc View Source CheckForInputSequence(InputSequence, UInt32, Boolean, Boolean) Checks to see if a given input sequence was inputted. Declaration public virtual bool CheckForInputSequence(InputSequence sequence, uint baseOffset = 0U, bool processSequenceButtons = false, bool holdInput = false) Parameters Type Name Description InputSequence sequence The sequence we're looking for. UInt32 baseOffset How far back we want to start the sequence check. 0 = current frame, 1 = 1 frame back, etc. Boolean processSequenceButtons If the sequence buttons should be checked, even if the execute buttons were not pressed. Boolean holdInput If the sequence check should check for the buttons being held down instead of their first prcess. Returns Type Description Boolean True if the input sequence was inputted. | Improve this Doc View Source CheckStartingNodes() Declaration protected virtual MovesetAttackNode CheckStartingNodes() Returns Type Description MovesetAttackNode | Improve this Doc View Source CheckStickDirection(InputDefinition, UInt32) Declaration protected virtual bool CheckStickDirection(InputDefinition sequenceInput, uint framesBack) Parameters Type Name Description InputDefinition sequenceInput UInt32 framesBack Returns Type Description Boolean | Improve this Doc View Source CLateUpdate() Declaration public virtual void CLateUpdate() | Improve this Doc View Source Cleanup() Declaration public virtual void Cleanup() | Improve this Doc View Source GetTeam() Declaration public virtual int GetTeam() Returns Type Description Int32 | Improve this Doc View Source Heal(HealInfoBase) Declaration public virtual void Heal(HealInfoBase healInfo) Parameters Type Name Description HealInfoBase healInfo | Improve this Doc View Source Hurt(HurtInfoBase) Declaration public virtual HitReaction Hurt(HurtInfoBase hurtInfoBase) Parameters Type Name Description HurtInfoBase hurtInfoBase Returns Type Description HitReaction | Improve this Doc View Source IncrementChargeLevelCharge(Int32) Declaration public virtual void IncrementChargeLevelCharge(int maxCharge) Parameters Type Name Description Int32 maxCharge | Improve this Doc View Source SetAttack(MovesetAttackNode) Declaration public virtual void SetAttack(MovesetAttackNode attackNode) Parameters Type Name Description MovesetAttackNode attackNode | Improve this Doc View Source SetChargeLevel(Int32) Declaration public virtual void SetChargeLevel(int value) Parameters Type Name Description Int32 value | Improve this Doc View Source SetChargeLevelCharge(Int32) Declaration public virtual void SetChargeLevelCharge(int value) Parameters Type Name Description Int32 value | Improve this Doc View Source SetHitStop(Int32) Declaration public virtual void SetHitStop(int value) Parameters Type Name Description Int32 value | Improve this Doc View Source SetHitStun(Int32) Declaration public virtual void SetHitStun(int value) Parameters Type Name Description Int32 value | Improve this Doc View Source SetMoveset(MovesetDefinition) Declaration public virtual void SetMoveset(MovesetDefinition moveset) Parameters Type Name Description MovesetDefinition moveset | Improve this Doc View Source TryAttack() Declaration public virtual MovesetAttackNode TryAttack() Returns Type Description MovesetAttackNode | Improve this Doc View Source TryCommandAttack() Declaration public virtual MovesetAttackNode TryCommandAttack() Returns Type Description MovesetAttackNode Events | Improve this Doc View Source OnChargeLevelChanged Declaration public event FighterCombatManager.ChargeLevelChangedAction OnChargeLevelChanged Event Type Type Description FighterCombatManager.ChargeLevelChangedAction | Improve this Doc View Source OnChargeLevelChargeChanged Declaration public event FighterCombatManager.ChargeLevelChargeChangedAction OnChargeLevelChargeChanged Event Type Type Description FighterCombatManager.ChargeLevelChargeChangedAction | Improve this Doc View Source OnChargeLevelChargeMaxReached Declaration public event FighterCombatManager.ChargeLevelChargeChangedAction OnChargeLevelChargeMaxReached Event Type Type Description FighterCombatManager.ChargeLevelChargeChangedAction | Improve this Doc View Source OnEnterHitStop Declaration public event FighterCombatManager.EmptyAction OnEnterHitStop Event Type Type Description FighterCombatManager.EmptyAction | Improve this Doc View Source OnEnterHitStun Declaration public event FighterCombatManager.EmptyAction OnEnterHitStun Event Type Type Description FighterCombatManager.EmptyAction | Improve this Doc View Source OnExitHitStop Declaration public event FighterCombatManager.EmptyAction OnExitHitStop Event Type Type Description FighterCombatManager.EmptyAction | Improve this Doc View Source OnExitHitStun Declaration public event FighterCombatManager.EmptyAction OnExitHitStun Event Type Type Description FighterCombatManager.EmptyAction | Improve this Doc View Source OnHealed Declaration public event FighterCombatManager.HealthChangedAction OnHealed Event Type Type Description FighterCombatManager.HealthChangedAction | Improve this Doc View Source OnHit Declaration public event FighterCombatManager.HealthChangedAction OnHit Event Type Type Description FighterCombatManager.HealthChangedAction | Improve this Doc View Source OnHitStopAdded Declaration public event FighterCombatManager.EmptyAction OnHitStopAdded Event Type Type Description FighterCombatManager.EmptyAction | Improve this Doc View Source OnHitStunAdded Declaration public event FighterCombatManager.EmptyAction OnHitStunAdded Event Type Type Description FighterCombatManager.EmptyAction | Improve this Doc View Source OnMovesetChanged Declaration public event FighterCombatManager.MovesetChangedAction OnMovesetChanged Event Type Type Description FighterCombatManager.MovesetChangedAction Implements IHurtable"
  },
  "api/CAF.Fighters.FighterCombatManager.MovesetChangedAction.html": {
    "href": "api/CAF.Fighters.FighterCombatManager.MovesetChangedAction.html",
    "title": "Delegate FighterCombatManager.MovesetChangedAction | Character Action Framework Documentation",
    "keywords": "Delegate FighterCombatManager.MovesetChangedAction Namespace : CAF.Fighters Assembly : CAF.dll Syntax public delegate void MovesetChangedAction(FighterBase self, MovesetDefinition lastMoveset); Parameters Type Name Description FighterBase self MovesetDefinition lastMoveset"
  },
  "api/CAF.Fighters.FighterHitboxManager.HitboxGroupEventAction.html": {
    "href": "api/CAF.Fighters.FighterHitboxManager.HitboxGroupEventAction.html",
    "title": "Delegate FighterHitboxManager.HitboxGroupEventAction | Character Action Framework Documentation",
    "keywords": "Delegate FighterHitboxManager.HitboxGroupEventAction Namespace : CAF.Fighters Assembly : CAF.dll Syntax public delegate void HitboxGroupEventAction(GameObject hurtableHit, int hitboxGroupIndex, MovesetAttackNode attack); Parameters Type Name Description GameObject hurtableHit Int32 hitboxGroupIndex MovesetAttackNode attack"
  },
  "api/CAF.Fighters.FighterHitboxManager.html": {
    "href": "api/CAF.Fighters.FighterHitboxManager.html",
    "title": "Class FighterHitboxManager | Character Action Framework Documentation",
    "keywords": "Class FighterHitboxManager Handles the hitboxes and other boxes used by entities for combat. Inheritance Object FighterHitboxManager Namespace : CAF.Fighters Assembly : CAF.dll Syntax public class FighterHitboxManager Constructors | Improve this Doc View Source FighterHitboxManager(FighterCombatManager, FighterBase) Declaration public FighterHitboxManager(FighterCombatManager combatManager, FighterBase manager) Parameters Type Name Description FighterCombatManager combatManager FighterBase manager Fields | Improve this Doc View Source combatManager Declaration public FighterCombatManager combatManager Field Value Type Description FighterCombatManager | Improve this Doc View Source hitboxGroups Declaration protected Dictionary<int, List<HitboxBase>> hitboxGroups Field Value Type Description Dictionary < Int32 , List < HitboxBase >> | Improve this Doc View Source hurtablesHit Declaration protected Dictionary<int, List<IHurtable>> hurtablesHit Field Value Type Description Dictionary < Int32 , List < IHurtable >> | Improve this Doc View Source manager Declaration public FighterBase manager Field Value Type Description FighterBase Methods | Improve this Doc View Source ActivateHitboxGroup(Int32) Activate the hitbox group with the given index. Declaration public virtual void ActivateHitboxGroup(int index) Parameters Type Name Description Int32 index The index of the hitbox group. | Improve this Doc View Source CleanupAllHitboxes() Destroy all the boxes and clears the dictionary. Declaration protected virtual void CleanupAllHitboxes() | Improve this Doc View Source CreateHitboxGroup(Int32) Create the hitbox group of the given index. Declaration public virtual void CreateHitboxGroup(int index) Parameters Type Name Description Int32 index The index of the hitbox group. | Improve this Doc View Source DeactivateHitboxGroup(Int32) Deactivate the hitbox group with the given index. Declaration public virtual void DeactivateHitboxGroup(int index) Parameters Type Name Description Int32 index The index of the hitbox group. | Improve this Doc View Source GetHitList(Int32) Declaration public virtual List<IHurtable> GetHitList(int group) Parameters Type Name Description Int32 group Returns Type Description List < IHurtable > | Improve this Doc View Source InstantiateHitbox(BoxDefinitionBase) Declaration protected virtual HitboxBase InstantiateHitbox(BoxDefinitionBase hitboxDefinitionBase) Parameters Type Name Description BoxDefinitionBase hitboxDefinitionBase Returns Type Description HitboxBase | Improve this Doc View Source OnHitboxHurt(GameObject, HitInfoBase, Int32, Int32) Called whenever a hitbox hits a hurtbox successfully. Declaration protected virtual void OnHitboxHurt(GameObject hurtableHit, HitInfoBase hitInfo, int hitboxID, int hitboxGroup) Parameters Type Name Description GameObject hurtableHit The hurtable that was hit. HitInfoBase hitInfo The hitInfo of the hitbox. Int32 hitboxID The hitbox ID of the hitbox. Int32 hitboxGroup | Improve this Doc View Source ReactivateHitboxGroup(Int32) Declaration public virtual void ReactivateHitboxGroup(int index) Parameters Type Name Description Int32 index | Improve this Doc View Source Reset() Destroys all boxes and clears variables. Declaration public virtual void Reset() | Improve this Doc View Source TickBoxes() Checks the hitboxes to see what they hit this frame. This should be called in late update, as physics update right after update. Declaration public virtual void TickBoxes() | Improve this Doc View Source UpdateHitboxIDIgnoreList(Int32) Updates the ignore/hit list of all hitboxes with the given ID. Declaration protected virtual void UpdateHitboxIDIgnoreList(int hitboxID) Parameters Type Name Description Int32 hitboxID The ID to update the hitboxes for. Events | Improve this Doc View Source OnHitboxHit Declaration public event FighterHitboxManager.HitboxGroupEventAction OnHitboxHit Event Type Type Description FighterHitboxManager.HitboxGroupEventAction"
  },
  "api/CAF.Fighters.FighterHurtboxManager.html": {
    "href": "api/CAF.Fighters.FighterHurtboxManager.html",
    "title": "Class FighterHurtboxManager | Character Action Framework Documentation",
    "keywords": "Class FighterHurtboxManager Inheritance Object FighterHurtboxManager Namespace : CAF.Fighters Assembly : CAF.dll Syntax public class FighterHurtboxManager : MonoBehaviour Fields | Improve this Doc View Source currentHurtboxDefinition Declaration protected StateHurtboxDefinition currentHurtboxDefinition Field Value Type Description StateHurtboxDefinition | Improve this Doc View Source hurtboxGroups Declaration protected Dictionary<int, List<Hurtbox>> hurtboxGroups Field Value Type Description Dictionary < Int32 , List < Hurtbox >> | Improve this Doc View Source hurtboxPool Declaration protected List<Hurtbox> hurtboxPool Field Value Type Description List < Hurtbox > | Improve this Doc View Source manager Declaration protected FighterBase manager Field Value Type Description FighterBase Methods | Improve this Doc View Source CreateHurtbox() Declaration protected virtual Hurtbox CreateHurtbox() Returns Type Description Hurtbox | Improve this Doc View Source CreateHurtboxes(UInt32) Declaration public virtual void CreateHurtboxes(uint frame) Parameters Type Name Description UInt32 frame | Improve this Doc View Source DestroyHurtbox(Hurtbox) Deactivates a hurtbox and returns it to the pool. Declaration protected virtual void DestroyHurtbox(Hurtbox hurtbox) Parameters Type Name Description Hurtbox hurtbox The hurtbox to deactivate. | Improve this Doc View Source SetHurtboxDefinition(StateHurtboxDefinition) Declaration public virtual void SetHurtboxDefinition(StateHurtboxDefinition stateHurtboxDefinition) Parameters Type Name Description StateHurtboxDefinition stateHurtboxDefinition | Improve this Doc View Source SetHurtboxInfo(Int32, Int32) Declaration protected virtual void SetHurtboxInfo(int groupID, int hurtboxIndex) Parameters Type Name Description Int32 groupID Int32 hurtboxIndex | Improve this Doc View Source Tick() Declaration public virtual void Tick()"
  },
  "api/CAF.Fighters.FighterInputManager.html": {
    "href": "api/CAF.Fighters.FighterInputManager.html",
    "title": "Class FighterInputManager | Character Action Framework Documentation",
    "keywords": "Class FighterInputManager Inheritance Object FighterInputManager Namespace : CAF.Fighters Assembly : CAF.dll Syntax public class FighterInputManager : MonoBehaviour Fields | Improve this Doc View Source bufferLimitAtTick Declaration public Dictionary<int, uint> bufferLimitAtTick Field Value Type Description Dictionary < Int32 , UInt32 > | Improve this Doc View Source manager Declaration protected FighterBase manager Field Value Type Description FighterBase Properties | Improve this Doc View Source ControlType Declaration public InputControlType ControlType { get; protected set; } Property Value Type Description InputControlType | Improve this Doc View Source InputRecord Declaration public InputRecordItem[] InputRecord { get; protected set; } Property Value Type Description InputRecordItem [] | Improve this Doc View Source inputRecordSize Declaration public uint inputRecordSize { get; protected set; } Property Value Type Description UInt32 | Improve this Doc View Source inputTick Declaration public uint inputTick { get; protected set; } Property Value Type Description UInt32 Methods | Improve this Doc View Source Awake() Declaration public virtual void Awake() | Improve this Doc View Source ClearBuffer(Int32) Clear a specific buffer. Declaration public virtual void ClearBuffer(int inputID) Parameters Type Name Description Int32 inputID The input to clear the buffer for. | Improve this Doc View Source GetAxis(Int32, UInt32) Get the axis at the offset given. Declaration public virtual float GetAxis(int axis, uint frameOffset = 0U) Parameters Type Name Description Int32 axis The ID of the axis. UInt32 frameOffset The frame offset to get the axis at. Returns Type Description Single The axis. | Improve this Doc View Source GetAxis2D(Int32, UInt32) Get the 2D axis at the offset given. Declaration public virtual Vector2 GetAxis2D(int axis2DID, uint frameOffset = 0U) Parameters Type Name Description Int32 axis2DID The ID of the 2D axis. UInt32 frameOffset The frame offset to get the 2D axis at. Returns Type Description Vector2 The 2D axis. | Improve this Doc View Source GetButton(Int32, UInt32, Boolean, UInt32) Get the status of the button given. If the buffer is being checked, the button returned will be from when it was first pressed within the window, if it exist. Otherwise, the button at the offset is given. Declaration public virtual InputRecordButton GetButton(int buttonID, uint frameOffset = 0U, bool checkBuffer = false, uint bufferFrames = 3U) Parameters Type Name Description Int32 buttonID The ID of the button to get. UInt32 frameOffset The offset from the current frame to check. Boolean checkBuffer If the buffer should be checked. UInt32 bufferFrames How many frames to check for buffer. Returns Type Description InputRecordButton The button and the information about it on the frame. | Improve this Doc View Source GetButton(Int32, out UInt32, UInt32, Boolean, UInt32) Get the status of the button given. If the buffer is being checked, the button returned will be from when it was first pressed within the window, if it exist. Otherwise, the button at the offset is given. Declaration public virtual InputRecordButton GetButton(int buttonID, out uint gotOffset, uint frameOffset = 0U, bool checkBuffer = false, uint bufferFrames = 3U) Parameters Type Name Description Int32 buttonID The ID of the button to get. UInt32 gotOffset UInt32 frameOffset The offset from the current frame to check. Boolean checkBuffer If the buffer should be checked. UInt32 bufferFrames How many frames to check for buffer. Returns Type Description InputRecordButton The button and the information about it on the frame. | Improve this Doc View Source GetInputs() Get the controller's inputs this frame and add them to the input record. Declaration protected virtual void GetInputs() | Improve this Doc View Source ProcessInput() Declaration protected virtual void ProcessInput() | Improve this Doc View Source SetControlType(InputControlType) Declaration public virtual void SetControlType(InputControlType controlType) Parameters Type Name Description InputControlType controlType | Improve this Doc View Source Tick() Declaration public virtual void Tick() | Improve this Doc View Source UsedInBuffer(Int32, UInt32) Declaration public virtual bool UsedInBuffer(int inputID, uint tick) Parameters Type Name Description Int32 inputID UInt32 tick Returns Type Description Boolean"
  },
  "api/CAF.Fighters.FighterPhysicsManager2D.html": {
    "href": "api/CAF.Fighters.FighterPhysicsManager2D.html",
    "title": "Class FighterPhysicsManager2D | Character Action Framework Documentation",
    "keywords": "Class FighterPhysicsManager2D Inheritance Object FighterPhysicsManagerBase FighterPhysicsManager2D Inherited Members FighterPhysicsManagerBase.manager FighterPhysicsManagerBase.Tick() FighterPhysicsManagerBase.Freeze() FighterPhysicsManagerBase.CheckIfGrounded() Namespace : CAF.Fighters Assembly : CAF.dll Syntax public class FighterPhysicsManager2D : FighterPhysicsManagerBase Fields | Improve this Doc View Source decelerationFactor Declaration protected float decelerationFactor Field Value Type Description Single | Improve this Doc View Source forceDamage Declaration public Vector2 forceDamage Field Value Type Description Vector2 | Improve this Doc View Source forceGravity Declaration public Vector2 forceGravity Field Value Type Description Vector2 | Improve this Doc View Source forceMovement Declaration public Vector2 forceMovement Field Value Type Description Vector2 | Improve this Doc View Source forcePushbox Declaration public Vector2 forcePushbox Field Value Type Description Vector2 Properties | Improve this Doc View Source GravityScale Declaration public float GravityScale { get; set; } Property Value Type Description Single Methods | Improve this Doc View Source ApplyFriction(Single, Single) Applies friction on the given value based on the traction given. Declaration protected virtual float ApplyFriction(float value, float traction) Parameters Type Name Description Single value The value to apply traction to. Single traction The traction to apply. Returns Type Description Single The new value with the traction applied. | Improve this Doc View Source ApplyGravityFriction(Single) Declaration public virtual void ApplyGravityFriction(float friction) Parameters Type Name Description Single friction | Improve this Doc View Source ApplyMovementFriction(Single) Declaration public virtual void ApplyMovementFriction(float friction = -1F) Parameters Type Name Description Single friction | Improve this Doc View Source GetOverallForce() Declaration public virtual Vector2 GetOverallForce() Returns Type Description Vector2 | Improve this Doc View Source HandleGravity(Single, Single, Single) Declaration public virtual void HandleGravity(float maxFallSpeed, float gravity, float gravityScale) Parameters Type Name Description Single maxFallSpeed Single gravity Single gravityScale | Improve this Doc View Source RedirectInertia(Single, Vector2) Declaration public virtual void RedirectInertia(float forceMovementX, Vector2 movementInput) Parameters Type Name Description Single forceMovementX Vector2 movementInput | Improve this Doc View Source ResetForces() Declaration public override void ResetForces() Overrides FighterPhysicsManagerBase.ResetForces()"
  },
  "api/CAF.Fighters.FighterPhysicsManager3D.html": {
    "href": "api/CAF.Fighters.FighterPhysicsManager3D.html",
    "title": "Class FighterPhysicsManager3D | Character Action Framework Documentation",
    "keywords": "Class FighterPhysicsManager3D Inheritance Object FighterPhysicsManagerBase FighterPhysicsManager3D Inherited Members FighterPhysicsManagerBase.manager FighterPhysicsManagerBase.Tick() FighterPhysicsManagerBase.Freeze() FighterPhysicsManagerBase.CheckIfGrounded() Namespace : CAF.Fighters Assembly : CAF.dll Syntax public class FighterPhysicsManager3D : FighterPhysicsManagerBase Fields | Improve this Doc View Source decelerationFactor Declaration protected float decelerationFactor Field Value Type Description Single | Improve this Doc View Source forceDamage Declaration public Vector3 forceDamage Field Value Type Description Vector3 | Improve this Doc View Source forceGravity Declaration public Vector3 forceGravity Field Value Type Description Vector3 | Improve this Doc View Source forceMovement Declaration public Vector3 forceMovement Field Value Type Description Vector3 | Improve this Doc View Source forcePushbox Declaration public Vector3 forcePushbox Field Value Type Description Vector3 Properties | Improve this Doc View Source GravityScale Declaration public float GravityScale { get; set; } Property Value Type Description Single Methods | Improve this Doc View Source ApplyFriction(Single, Single) Applies friction on the given value based on the traction given. Declaration protected virtual float ApplyFriction(float value, float traction) Parameters Type Name Description Single value The value to apply traction to. Single traction The traction to apply. Returns Type Description Single The new value with the traction applied. | Improve this Doc View Source ApplyGravityFriction(Single) Declaration public virtual void ApplyGravityFriction(float friction) Parameters Type Name Description Single friction | Improve this Doc View Source ApplyMovementFriction(Single) Declaration public virtual void ApplyMovementFriction(float friction = -1F) Parameters Type Name Description Single friction | Improve this Doc View Source GetOverallForce() Declaration public virtual Vector3 GetOverallForce() Returns Type Description Vector3 | Improve this Doc View Source HandleGravity(Single, Single, Single) Declaration public virtual void HandleGravity(float maxFallSpeed, float gravity, float gravityScale) Parameters Type Name Description Single maxFallSpeed Single gravity Single gravityScale | Improve this Doc View Source RedirectInertia(Vector3, Vector2) Declaration public virtual void RedirectInertia(Vector3 forceMovement, Vector2 movementInput) Parameters Type Name Description Vector3 forceMovement Vector2 movementInput | Improve this Doc View Source ResetForces() Declaration public override void ResetForces() Overrides FighterPhysicsManagerBase.ResetForces()"
  },
  "api/CAF.Fighters.FighterPhysicsManagerBase.html": {
    "href": "api/CAF.Fighters.FighterPhysicsManagerBase.html",
    "title": "Class FighterPhysicsManagerBase | Character Action Framework Documentation",
    "keywords": "Class FighterPhysicsManagerBase Inheritance Object FighterPhysicsManagerBase FighterPhysicsManager2D FighterPhysicsManager3D Namespace : CAF.Fighters Assembly : CAF.dll Syntax public class FighterPhysicsManagerBase : MonoBehaviour Fields | Improve this Doc View Source manager Declaration protected FighterBase manager Field Value Type Description FighterBase Methods | Improve this Doc View Source CheckIfGrounded() Check if we are on the ground. Declaration public virtual void CheckIfGrounded() | Improve this Doc View Source Freeze() Declaration public virtual void Freeze() | Improve this Doc View Source ResetForces() Declaration public virtual void ResetForces() | Improve this Doc View Source Tick() Declaration public virtual void Tick()"
  },
  "api/CAF.Fighters.FighterState.html": {
    "href": "api/CAF.Fighters.FighterState.html",
    "title": "Class FighterState | Character Action Framework Documentation",
    "keywords": "Class FighterState Inheritance Object FighterState Namespace : CAF.Fighters Assembly : CAF.dll Syntax public class FighterState Properties | Improve this Doc View Source Manager Declaration public FighterBase Manager { get; set; } Property Value Type Description FighterBase Methods | Improve this Doc View Source CheckInterrupt() Called during OnUpdate to check if we should transition into another state. Declaration public virtual bool CheckInterrupt() Returns Type Description Boolean Returns true if we transitioned into another state. | Improve this Doc View Source GetName() Get the name of the state. Declaration public virtual string GetName() Returns Type Description String The state name. | Improve this Doc View Source Initialize() Called when the state is changed to. Declaration public virtual void Initialize() | Improve this Doc View Source OnInterrupted() Called when we transition into another state. Declaration public virtual void OnInterrupted() | Improve this Doc View Source OnUpdate() Called every update tick. Declaration public virtual void OnUpdate()"
  },
  "api/CAF.Fighters.FighterStateManager.html": {
    "href": "api/CAF.Fighters.FighterStateManager.html",
    "title": "Class FighterStateManager | Character Action Framework Documentation",
    "keywords": "Class FighterStateManager Inheritance Object FighterStateManager Namespace : CAF.Fighters Assembly : CAF.dll Syntax public class FighterStateManager : MonoBehaviour Fields | Improve this Doc View Source currentState Declaration protected ushort currentState Field Value Type Description UInt16 | Improve this Doc View Source currentStateFrame Declaration protected uint currentStateFrame Field Value Type Description UInt32 | Improve this Doc View Source currentStateName Declaration protected string currentStateName Field Value Type Description String | Improve this Doc View Source manager Declaration protected FighterBase manager Field Value Type Description FighterBase | Improve this Doc View Source states Declaration protected Dictionary<ushort, FighterState> states Field Value Type Description Dictionary < UInt16 , FighterState > Properties | Improve this Doc View Source CurrentState Declaration public ushort CurrentState { get; } Property Value Type Description UInt16 | Improve this Doc View Source CurrentStateFrame Declaration public uint CurrentStateFrame { get; } Property Value Type Description UInt32 Methods | Improve this Doc View Source AddState(FighterState, UInt16) Adds a state to the entity's state list. Declaration public virtual void AddState(FighterState state, ushort stateNumber) Parameters Type Name Description FighterState state The state. UInt16 stateNumber The number of the state. | Improve this Doc View Source ChangeState(UInt16, UInt32, Boolean) Changes the state to the given one. Declaration public virtual bool ChangeState(ushort state, uint stateFrame = 0U, bool callOnInterrupt = true) Parameters Type Name Description UInt16 state The state to change to. UInt32 stateFrame What frame to start the state at. Boolean callOnInterrupt If OnInterrupt of the current state should be called. Returns Type Description Boolean | Improve this Doc View Source GetState(UInt16) Declaration public virtual FighterState GetState(ushort state) Parameters Type Name Description UInt16 state Returns Type Description FighterState | Improve this Doc View Source IncrementFrame() Declaration public virtual void IncrementFrame() | Improve this Doc View Source SetFrame(UInt32) Declaration public virtual void SetFrame(uint frame) Parameters Type Name Description UInt32 frame | Improve this Doc View Source Tick() Declaration public virtual void Tick() Events | Improve this Doc View Source OnStateFrameSet Declaration public event FighterStateManager.StateFrameAction OnStateFrameSet Event Type Type Description FighterStateManager.StateFrameAction | Improve this Doc View Source OnStatePostChange Declaration public event FighterStateManager.StateAction OnStatePostChange Event Type Type Description FighterStateManager.StateAction | Improve this Doc View Source OnStatePreChange Declaration public event FighterStateManager.StateAction OnStatePreChange Event Type Type Description FighterStateManager.StateAction"
  },
  "api/CAF.Fighters.FighterStateManager.StateAction.html": {
    "href": "api/CAF.Fighters.FighterStateManager.StateAction.html",
    "title": "Delegate FighterStateManager.StateAction | Character Action Framework Documentation",
    "keywords": "Delegate FighterStateManager.StateAction Namespace : CAF.Fighters Assembly : CAF.dll Syntax public delegate void StateAction(FighterBase self, ushort from, uint fromStateFrame); Parameters Type Name Description FighterBase self UInt16 from UInt32 fromStateFrame"
  },
  "api/CAF.Fighters.FighterStateManager.StateFrameAction.html": {
    "href": "api/CAF.Fighters.FighterStateManager.StateFrameAction.html",
    "title": "Delegate FighterStateManager.StateFrameAction | Character Action Framework Documentation",
    "keywords": "Delegate FighterStateManager.StateFrameAction Namespace : CAF.Fighters Assembly : CAF.dll Syntax public delegate void StateFrameAction(FighterBase self, uint preChangeFrame); Parameters Type Name Description FighterBase self UInt32 preChangeFrame"
  },
  "api/CAF.Fighters.html": {
    "href": "api/CAF.Fighters.html",
    "title": "Namespace CAF.Fighters | Character Action Framework Documentation",
    "keywords": "Namespace CAF.Fighters Classes FighterBase FighterCombatManager FighterHitboxManager Handles the hitboxes and other boxes used by entities for combat. FighterHurtboxManager FighterInputManager FighterPhysicsManager2D FighterPhysicsManager3D FighterPhysicsManagerBase FighterState FighterStateManager Delegates FighterCombatManager.ChargeLevelChangedAction FighterCombatManager.ChargeLevelChargeChangedAction FighterCombatManager.EmptyAction FighterCombatManager.HealthChangedAction FighterCombatManager.MovesetChangedAction FighterHitboxManager.HitboxGroupEventAction FighterStateManager.StateAction FighterStateManager.StateFrameAction"
  },
  "api/CAF.HelperFunctions.html": {
    "href": "api/CAF.HelperFunctions.html",
    "title": "Class HelperFunctions | Character Action Framework Documentation",
    "keywords": "Class HelperFunctions Random functions with different purposes. Inheritance Object HelperFunctions Namespace : CAF Assembly : CAF.dll Syntax public static class HelperFunctions Methods | Improve this Doc View Source GetStickDir(Vector2, Single) Takes the given stick direction and converts it to an 8-way direction. Declaration public static Vector2Int GetStickDir(Vector2 stick, float zone) Parameters Type Name Description Vector2 stick The direction of the stick. Single zone How big the axis deadzones are. Returns Type Description Vector2Int The converted direction vector. | Improve this Doc View Source signum(Single) Get the signum of the given value. Declaration public static int signum(float v) Parameters Type Name Description Single v The value to convert. Returns Type Description Int32 1 if the value is more than zero, -1 otherwise."
  },
  "api/CAF.html": {
    "href": "api/CAF.html",
    "title": "Namespace CAF | Character Action Framework Documentation",
    "keywords": "Namespace CAF Classes HelperFunctions Random functions with different purposes."
  },
  "api/CAF.Input.GlobalInputManager.html": {
    "href": "api/CAF.Input.GlobalInputManager.html",
    "title": "Class GlobalInputManager | Character Action Framework Documentation",
    "keywords": "Class GlobalInputManager Inheritance Object GlobalInputManager Namespace : CAF.Input Assembly : CAF.dll Syntax public class GlobalInputManager Fields | Improve this Doc View Source instance Declaration public static GlobalInputManager instance Field Value Type Description GlobalInputManager Methods | Improve this Doc View Source GetAxis(Int32, Int32) Declaration public virtual float GetAxis(int playerID, int axis) Parameters Type Name Description Int32 playerID Int32 axis Returns Type Description Single | Improve this Doc View Source GetAxis(Int32, String) Declaration public virtual float GetAxis(int playerID, string axisName) Parameters Type Name Description Int32 playerID String axisName Returns Type Description Single | Improve this Doc View Source GetAxis2D(Int32, Int32, Int32) Declaration public virtual Vector2 GetAxis2D(int playerID, int horizontal, int vertical) Parameters Type Name Description Int32 playerID Int32 horizontal Int32 vertical Returns Type Description Vector2 | Improve this Doc View Source GetAxis2D(Int32, String, String) Declaration public virtual Vector2 GetAxis2D(int playerID, string horizontal, string vertical) Parameters Type Name Description Int32 playerID String horizontal String vertical Returns Type Description Vector2 | Improve this Doc View Source GetButton(Int32, Int32) Declaration public virtual bool GetButton(int playerID, int button) Parameters Type Name Description Int32 playerID Int32 button Returns Type Description Boolean | Improve this Doc View Source GetButton(Int32, String) Declaration public virtual bool GetButton(int playerID, string buttonName) Parameters Type Name Description Int32 playerID String buttonName Returns Type Description Boolean | Improve this Doc View Source GetButtonDown(Int32, Int32) Declaration public virtual bool GetButtonDown(int playerID, int button) Parameters Type Name Description Int32 playerID Int32 button Returns Type Description Boolean | Improve this Doc View Source GetButtonDown(Int32, String) Declaration public virtual bool GetButtonDown(int playerID, string buttonName) Parameters Type Name Description Int32 playerID String buttonName Returns Type Description Boolean | Improve this Doc View Source GetButtonUp(Int32, Int32) Declaration public virtual bool GetButtonUp(int playerID, int button) Parameters Type Name Description Int32 playerID Int32 button Returns Type Description Boolean | Improve this Doc View Source GetButtonUp(Int32, String) Declaration public virtual bool GetButtonUp(int playerID, string buttonName) Parameters Type Name Description Int32 playerID String buttonName Returns Type Description Boolean"
  },
  "api/CAF.Input.html": {
    "href": "api/CAF.Input.html",
    "title": "Namespace CAF.Input | Character Action Framework Documentation",
    "keywords": "Namespace CAF.Input Classes GlobalInputManager InputDefinition InputDefinitionDrawer InputRecordItem InputSequence Structs InputRecordAxis InputRecordAxis2D InputRecordButton Interfaces InputRecordInput Enums InputButtonStates InputControlType InputDefinitionType"
  },
  "api/CAF.Input.InputButtonStates.html": {
    "href": "api/CAF.Input.InputButtonStates.html",
    "title": "Enum InputButtonStates | Character Action Framework Documentation",
    "keywords": "Enum InputButtonStates Namespace : CAF.Input Assembly : CAF.dll Syntax public enum InputButtonStates Fields Name Description FIRST_PRESS IS_DOWN RELEASED"
  },
  "api/CAF.Input.InputControlType.html": {
    "href": "api/CAF.Input.InputControlType.html",
    "title": "Enum InputControlType | Character Action Framework Documentation",
    "keywords": "Enum InputControlType Namespace : CAF.Input Assembly : CAF.dll Syntax public enum InputControlType Fields Name Description AI Direct None"
  },
  "api/CAF.Input.InputDefinition.html": {
    "href": "api/CAF.Input.InputDefinition.html",
    "title": "Class InputDefinition | Character Action Framework Documentation",
    "keywords": "Class InputDefinition Inheritance Object InputDefinition Namespace : CAF.Input Assembly : CAF.dll Syntax [Serializable] public class InputDefinition Fields | Improve this Doc View Source buttonID Declaration public int buttonID Field Value Type Description Int32 | Improve this Doc View Source directionDeviation Declaration public float directionDeviation Field Value Type Description Single | Improve this Doc View Source inputType Declaration public InputDefinitionType inputType Field Value Type Description InputDefinitionType | Improve this Doc View Source stickDirection Declaration public Vector2 stickDirection Field Value Type Description Vector2 Methods | Improve this Doc View Source DrawInspector() Declaration public virtual void DrawInspector()"
  },
  "api/CAF.Input.InputDefinitionDrawer.html": {
    "href": "api/CAF.Input.InputDefinitionDrawer.html",
    "title": "Class InputDefinitionDrawer | Character Action Framework Documentation",
    "keywords": "Class InputDefinitionDrawer Inheritance Object InputDefinitionDrawer Namespace : CAF.Input Assembly : CAF.Editor.dll Syntax public class InputDefinitionDrawer : PropertyDrawer Methods | Improve this Doc View Source GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single | Improve this Doc View Source OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/CAF.Input.InputDefinitionType.html": {
    "href": "api/CAF.Input.InputDefinitionType.html",
    "title": "Enum InputDefinitionType | Character Action Framework Documentation",
    "keywords": "Enum InputDefinitionType Namespace : CAF.Input Assembly : CAF.dll Syntax public enum InputDefinitionType Fields Name Description Button Stick"
  },
  "api/CAF.Input.InputRecordAxis.html": {
    "href": "api/CAF.Input.InputRecordAxis.html",
    "title": "Struct InputRecordAxis | Character Action Framework Documentation",
    "keywords": "Struct InputRecordAxis Implements InputRecordInput Namespace : CAF.Input Assembly : CAF.dll Syntax [Serializable] public struct InputRecordAxis : InputRecordInput Constructors | Improve this Doc View Source InputRecordAxis(Single) Declaration public InputRecordAxis(float axis) Parameters Type Name Description Single axis Fields | Improve this Doc View Source axis Declaration public float axis Field Value Type Description Single Methods | Improve this Doc View Source Process(InputRecordInput) Declaration public void Process(InputRecordInput lastStateDown) Parameters Type Name Description InputRecordInput lastStateDown | Improve this Doc View Source UsedInBuffer() Declaration public bool UsedInBuffer() Returns Type Description Boolean | Improve this Doc View Source UseInBuffer() Declaration public void UseInBuffer() Implements InputRecordInput"
  },
  "api/CAF.Input.InputRecordAxis2D.html": {
    "href": "api/CAF.Input.InputRecordAxis2D.html",
    "title": "Struct InputRecordAxis2D | Character Action Framework Documentation",
    "keywords": "Struct InputRecordAxis2D Implements InputRecordInput Namespace : CAF.Input Assembly : CAF.dll Syntax [Serializable] public struct InputRecordAxis2D : InputRecordInput Constructors | Improve this Doc View Source InputRecordAxis2D(Vector2) Declaration public InputRecordAxis2D(Vector2 axis2D) Parameters Type Name Description Vector2 axis2D Fields | Improve this Doc View Source axis2D Declaration public Vector2 axis2D Field Value Type Description Vector2 Methods | Improve this Doc View Source Process(InputRecordInput) Declaration public void Process(InputRecordInput lastStateDown) Parameters Type Name Description InputRecordInput lastStateDown | Improve this Doc View Source UsedInBuffer() Declaration public bool UsedInBuffer() Returns Type Description Boolean | Improve this Doc View Source UseInBuffer() Declaration public void UseInBuffer() Implements InputRecordInput"
  },
  "api/CAF.Input.InputRecordButton.html": {
    "href": "api/CAF.Input.InputRecordButton.html",
    "title": "Struct InputRecordButton | Character Action Framework Documentation",
    "keywords": "Struct InputRecordButton Implements InputRecordInput Namespace : CAF.Input Assembly : CAF.dll Syntax [Serializable] public struct InputRecordButton : InputRecordInput Constructors | Improve this Doc View Source InputRecordButton(Boolean) Declaration public InputRecordButton(bool button) Parameters Type Name Description Boolean button Fields | Improve this Doc View Source firstPress Declaration public bool firstPress Field Value Type Description Boolean | Improve this Doc View Source isDown Declaration public bool isDown Field Value Type Description Boolean | Improve this Doc View Source released Declaration public bool released Field Value Type Description Boolean Methods | Improve this Doc View Source Process(InputRecordInput) Declaration public void Process(InputRecordInput lastInput) Parameters Type Name Description InputRecordInput lastInput Implements InputRecordInput"
  },
  "api/CAF.Input.InputRecordInput.html": {
    "href": "api/CAF.Input.InputRecordInput.html",
    "title": "Interface InputRecordInput | Character Action Framework Documentation",
    "keywords": "Interface InputRecordInput Namespace : CAF.Input Assembly : CAF.dll Syntax public interface InputRecordInput Methods | Improve this Doc View Source Process(InputRecordInput) Declaration void Process(InputRecordInput lastStateDown) Parameters Type Name Description InputRecordInput lastStateDown"
  },
  "api/CAF.Input.InputRecordItem.html": {
    "href": "api/CAF.Input.InputRecordItem.html",
    "title": "Class InputRecordItem | Character Action Framework Documentation",
    "keywords": "Class InputRecordItem Inheritance Object InputRecordItem Namespace : CAF.Input Assembly : CAF.dll Syntax public class InputRecordItem Constructors | Improve this Doc View Source InputRecordItem() Declaration public InputRecordItem() Fields | Improve this Doc View Source inputs Declaration public Dictionary<int, InputRecordInput> inputs Field Value Type Description Dictionary < Int32 , InputRecordInput > Methods | Improve this Doc View Source AddInput(Int32, InputRecordInput) Declaration public virtual bool AddInput(int inputID, InputRecordInput input) Parameters Type Name Description Int32 inputID InputRecordInput input Returns Type Description Boolean"
  },
  "api/CAF.Input.InputSequence.html": {
    "href": "api/CAF.Input.InputSequence.html",
    "title": "Class InputSequence | Character Action Framework Documentation",
    "keywords": "Class InputSequence Inheritance Object InputSequence Namespace : CAF.Input Assembly : CAF.dll Syntax [Serializable] public class InputSequence Fields | Improve this Doc View Source executeInputs Declaration public List<InputDefinition> executeInputs Field Value Type Description List < InputDefinition > | Improve this Doc View Source executeWindow Declaration public uint executeWindow Field Value Type Description UInt32 | Improve this Doc View Source sequenceInputs Declaration public List<InputDefinition> sequenceInputs Field Value Type Description List < InputDefinition > | Improve this Doc View Source sequenceWindow Declaration public uint sequenceWindow Field Value Type Description UInt32 Methods | Improve this Doc View Source DrawInspector() Declaration public virtual void DrawInspector()"
  },
  "api/CAF.Simulation.html": {
    "href": "api/CAF.Simulation.html",
    "title": "Namespace CAF.Simulation | Character Action Framework Documentation",
    "keywords": "Namespace CAF.Simulation Classes SimObjectManager The SimObjectManager handles keeping track of all objects that should be simulated and simulates them and the physics engine. Interfaces ISimObject A SimObject should be implemented by any class that will be apart of the simulation. ISimObjectManager"
  },
  "api/CAF.Simulation.ISimObject.html": {
    "href": "api/CAF.Simulation.ISimObject.html",
    "title": "Interface ISimObject | Character Action Framework Documentation",
    "keywords": "Interface ISimObject A SimObject should be implemented by any class that will be apart of the simulation. Namespace : CAF.Simulation Assembly : CAF.dll Syntax public interface ISimObject Methods | Improve this Doc View Source SimLateUpdate() Called every simulation tick after all updates are called. Declaration void SimLateUpdate() | Improve this Doc View Source SimUpdate() Called every simulations tick. Declaration void SimUpdate()"
  },
  "api/CAF.Simulation.ISimObjectManager.html": {
    "href": "api/CAF.Simulation.ISimObjectManager.html",
    "title": "Interface ISimObjectManager | Character Action Framework Documentation",
    "keywords": "Interface ISimObjectManager Namespace : CAF.Simulation Assembly : CAF.dll Syntax public interface ISimObjectManager Methods | Improve this Doc View Source RegisterObject(ISimObject) Declaration void RegisterObject(ISimObject simObject) Parameters Type Name Description ISimObject simObject | Improve this Doc View Source RemoveObjectFromSimulation(ISimObject) Declaration void RemoveObjectFromSimulation(ISimObject simObject) Parameters Type Name Description ISimObject simObject | Improve this Doc View Source SpawnObject(GameObject, Vector3, Quaternion) Declaration GameObject SpawnObject(GameObject prefab, Vector3 position, Quaternion rotation) Parameters Type Name Description GameObject prefab Vector3 position Quaternion rotation Returns Type Description GameObject"
  },
  "api/CAF.Simulation.SimObjectManager.html": {
    "href": "api/CAF.Simulation.SimObjectManager.html",
    "title": "Class SimObjectManager | Character Action Framework Documentation",
    "keywords": "Class SimObjectManager The SimObjectManager handles keeping track of all objects that should be simulated and simulates them and the physics engine. Inheritance Object SimObjectManager Implements ISimObjectManager Namespace : CAF.Simulation Assembly : CAF.dll Syntax public class SimObjectManager : ISimObjectManager Fields | Improve this Doc View Source simObjects A list of all objects in the simulation. Declaration protected List<ISimObject> simObjects Field Value Type Description List < ISimObject > Methods | Improve this Doc View Source LateUpdate() Calls every object's SimLateUpate method that is in the simulation. Declaration public virtual void LateUpdate() | Improve this Doc View Source LateUpdateSimObjects() Calls every object's SimLateUpate method that is in the simulation. Declaration protected virtual void LateUpdateSimObjects() | Improve this Doc View Source RegisterObject(ISimObject) Registers an object to the simulation. Declaration public virtual void RegisterObject(ISimObject simObject) Parameters Type Name Description ISimObject simObject The object to register to the simulation. | Improve this Doc View Source RemoveObjectFromSimulation(ISimObject) Remove an object from the simulation. Declaration public virtual void RemoveObjectFromSimulation(ISimObject simObject) Parameters Type Name Description ISimObject simObject The object to remove. | Improve this Doc View Source SimulatePhysics() Simulate physics. Declaration protected virtual void SimulatePhysics() | Improve this Doc View Source SpawnObject(GameObject, Vector3, Quaternion) Instantiate an object and registers it in the simulation. Declaration public virtual GameObject SpawnObject(GameObject prefab, Vector3 position, Quaternion rotation) Parameters Type Name Description GameObject prefab The object to instantiate. Vector3 position The position to instantiate at. Quaternion rotation The rotation to instantiate with. Returns Type Description GameObject The object that was created. | Improve this Doc View Source Update() Calls every object's SimUpdate method that is in the simulation. After that, it ticks the physics engine. Declaration public virtual void Update() | Improve this Doc View Source UpdateSimObjects() Calls every object's SimUpdate method that is in the simulation. Declaration protected virtual void UpdateSimObjects() Implements ISimObjectManager"
  },
  "guides/createchara.html": {
    "href": "guides/createchara.html",
    "title": "Entity Setup | Character Action Framework Documentation",
    "keywords": "Entity Setup Overview In CAF, an Entity refers to objects that take in input (weither it be from the player or from AI) to decide what state it should be in/transition into. It has helpers for physics force handling, combat related task such as hitbox creation and attack processing, and other various methods. All of these combine to create an Entity, which will usually be either a player controlled character or an enemy. Here we'll walk through the components required for a entity along with what they do. GameObject Setup First let's set up the GameObject that will contain all our scripts. Create a GameObject and attach a collider and a Rigidbody (or whatever you use to control the character's forces, such as a Character Controller ). Turn off the Rigidbody's gravity and set it's Angular Drag to 0. It should look like this. For the model or sprite of the Entity, you should assign it as a child of this GameObject. You should end up with a hierarchy like so."
  },
  "guides/index.html": {
    "href": "guides/index.html",
    "title": "Installation | Character Action Framework Documentation",
    "keywords": "Installation First you should install the required assets. These are xNode Reorderable List After that, install using one of the methods below. Unity Package Manager To install this framework with the package manager, use this URL (replacing vX.X.X with the version you want): https://github.com/christides11/Character-Action-Framework.git#upm/vX.X.X Download Download the repository (either by cloning it or downloading as a zip) and put the CAF folder in your project. Delete the Samples folder if you don't need it."
  },
  "guides/setup.html": {
    "href": "guides/setup.html",
    "title": "Setup | Character Action Framework Documentation",
    "keywords": "Setup Implement Classes First, you should create scripts that inherit from the ones listed below. These classes contain methods that you'll want to override depending on your game's needs, so it's important to do this now instead of potentially having to switch out the CAF component later. SimObjectManager @CAF.Entities.EntityState Entity Managers (Basically anything under @\"CAF.Entities\") AttackDefinition MovesetDefinition Run the Simulation In CAF, every object that exist in the game depends on the SimObjectManager. This script handles the creation and tracking of these objects, along with calling their update methods and simulating physics. Because of this, the next thing we want to do is create an instance of this class somewhere, perferably when your game is in the state where you want to instantiate the player's character and other stage elements. simulationObjectManager = new SimObjectManager(); Once you do that, you want to call these two every fixed update. public void FixedUpdate(){ simulationObjectManager.Update(Time.fixedDeltaTime); simulationObjectManager.LateUpdate(Time.fixedDeltaTime); } With that, the simulation should run, but right now we have nothing in the simulation. In the next step we'll walk through the components of a entity and show how to add objects to the simulation. Side Note: Physics SimObjectManager defaults to updating 3D Physics. If you're using 2D Physics, you'll want to override the SimulatePhysics method like so. protected override void SimulatePhysics(float deltatime){ Physics2D.Simulate(deltatime); } Side Note: Tick Rate since the simulation is ticked every fixed update, how often the simulation updates depends on the value of Fixed Timestep . By default it's set to 0.02, which translates to a tick rate of 50 times a second (0.02 = 1/50). Most action games target a tick rate of 60 times a second, so you may want to change the value to 0.01666667 (~1/60). You also might want to make the Maximum Allowed Timestep something like 0.02 for reasons explained here ."
  },
  "index.html": {
    "href": "index.html",
    "title": "Character Action Framework | Character Action Framework Documentation",
    "keywords": "Character Action Framework Character Action Framework (or CAF) is a Unity-focused framework designed for making character action games. CAF's goal is to create a framework that handles most of the code that works similarly between games of this type, while also providing the ability to change any part of the framework easily. Getting Started TO get started, follow the guide here . This guide will walk you through installing the framework all the way to having a functional game running. Examples Right now the project come with a 2D action game example, but it's a WIP. Other than that, you can look at Touhou Unlimited Fantasies for an example too. Contributing Any contributions are appriciated, please create pull request or issues detailing wanted features/bug reports. If this project has helped you in any way, please consider donating ."
  }
}