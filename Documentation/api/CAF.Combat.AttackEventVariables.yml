### YamlMime:ManagedReference
items:
- uid: CAF.Combat.AttackEventVariables
  commentId: T:CAF.Combat.AttackEventVariables
  id: AttackEventVariables
  parent: CAF.Combat
  children:
  - CAF.Combat.AttackEventVariables.curveVars
  - CAF.Combat.AttackEventVariables.floatVars
  - CAF.Combat.AttackEventVariables.intVars
  - CAF.Combat.AttackEventVariables.objectVars
  langs:
  - csharp
  - vb
  name: AttackEventVariables
  nameWithType: AttackEventVariables
  fullName: CAF.Combat.AttackEventVariables
  type: Class
  source:
    remote:
      path: Assets/CAF/Combat/Attack Events/AttackEventVariables.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: AttackEventVariables
    path: ../Assets/CAF/Combat/Attack Events/AttackEventVariables.cs
    startLine: 5
  assemblies:
  - CAF
  namespace: CAF.Combat
  syntax:
    content: >-
      [Serializable]

      public class AttackEventVariables
    content.vb: >-
      <Serializable>

      Public Class AttackEventVariables
  inheritance:
  - System.Object
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CAF.Combat.AttackEventVariables.intVars
  commentId: F:CAF.Combat.AttackEventVariables.intVars
  id: intVars
  parent: CAF.Combat.AttackEventVariables
  langs:
  - csharp
  - vb
  name: intVars
  nameWithType: AttackEventVariables.intVars
  fullName: CAF.Combat.AttackEventVariables.intVars
  type: Field
  source:
    remote:
      path: Assets/CAF/Combat/Attack Events/AttackEventVariables.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: intVars
    path: ../Assets/CAF/Combat/Attack Events/AttackEventVariables.cs
    startLine: 8
  assemblies:
  - CAF
  namespace: CAF.Combat
  syntax:
    content: public List<int> intVars
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public intVars As List(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CAF.Combat.AttackEventVariables.floatVars
  commentId: F:CAF.Combat.AttackEventVariables.floatVars
  id: floatVars
  parent: CAF.Combat.AttackEventVariables
  langs:
  - csharp
  - vb
  name: floatVars
  nameWithType: AttackEventVariables.floatVars
  fullName: CAF.Combat.AttackEventVariables.floatVars
  type: Field
  source:
    remote:
      path: Assets/CAF/Combat/Attack Events/AttackEventVariables.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: floatVars
    path: ../Assets/CAF/Combat/Attack Events/AttackEventVariables.cs
    startLine: 9
  assemblies:
  - CAF
  namespace: CAF.Combat
  syntax:
    content: public List<float> floatVars
    return:
      type: System.Collections.Generic.List{System.Single}
    content.vb: Public floatVars As List(Of Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CAF.Combat.AttackEventVariables.objectVars
  commentId: F:CAF.Combat.AttackEventVariables.objectVars
  id: objectVars
  parent: CAF.Combat.AttackEventVariables
  langs:
  - csharp
  - vb
  name: objectVars
  nameWithType: AttackEventVariables.objectVars
  fullName: CAF.Combat.AttackEventVariables.objectVars
  type: Field
  source:
    remote:
      path: Assets/CAF/Combat/Attack Events/AttackEventVariables.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: objectVars
    path: ../Assets/CAF/Combat/Attack Events/AttackEventVariables.cs
    startLine: 10
  assemblies:
  - CAF
  namespace: CAF.Combat
  syntax:
    content: public List<Object> objectVars
    return:
      type: System.Collections.Generic.List{UnityEngine.Object}
    content.vb: Public objectVars As List(Of Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CAF.Combat.AttackEventVariables.curveVars
  commentId: F:CAF.Combat.AttackEventVariables.curveVars
  id: curveVars
  parent: CAF.Combat.AttackEventVariables
  langs:
  - csharp
  - vb
  name: curveVars
  nameWithType: AttackEventVariables.curveVars
  fullName: CAF.Combat.AttackEventVariables.curveVars
  type: Field
  source:
    remote:
      path: Assets/CAF/Combat/Attack Events/AttackEventVariables.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: curveVars
    path: ../Assets/CAF/Combat/Attack Events/AttackEventVariables.cs
    startLine: 11
  assemblies:
  - CAF
  namespace: CAF.Combat
  syntax:
    content: public List<AnimationCurve> curveVars
    return:
      type: System.Collections.Generic.List{UnityEngine.AnimationCurve}
    content.vb: Public curveVars As List(Of AnimationCurve)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CAF.Combat
  commentId: N:CAF.Combat
  name: CAF.Combat
  nameWithType: CAF.Combat
  fullName: CAF.Combat
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{System.Single}
  commentId: T:System.Collections.Generic.List{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Single>
  nameWithType: List<Single>
  fullName: System.Collections.Generic.List<System.Single>
  nameWithType.vb: List(Of Single)
  fullName.vb: System.Collections.Generic.List(Of System.Single)
  name.vb: List(Of Single)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{UnityEngine.Object}
  commentId: T:System.Collections.Generic.List{UnityEngine.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Object>
  nameWithType: List<Object>
  fullName: System.Collections.Generic.List<UnityEngine.Object>
  nameWithType.vb: List(Of Object)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Object)
  name.vb: List(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{UnityEngine.AnimationCurve}
  commentId: T:System.Collections.Generic.List{UnityEngine.AnimationCurve}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<AnimationCurve>
  nameWithType: List<AnimationCurve>
  fullName: System.Collections.Generic.List<UnityEngine.AnimationCurve>
  nameWithType.vb: List(Of AnimationCurve)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.AnimationCurve)
  name.vb: List(Of AnimationCurve)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.AnimationCurve
    name: AnimationCurve
    nameWithType: AnimationCurve
    fullName: UnityEngine.AnimationCurve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.AnimationCurve
    name: AnimationCurve
    nameWithType: AnimationCurve
    fullName: UnityEngine.AnimationCurve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
