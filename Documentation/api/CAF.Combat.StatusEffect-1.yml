### YamlMime:ManagedReference
items:
- uid: CAF.Combat.StatusEffect`1
  commentId: T:CAF.Combat.StatusEffect`1
  id: StatusEffect`1
  parent: CAF.Combat
  children:
  - CAF.Combat.StatusEffect`1.data
  langs:
  - csharp
  - vb
  name: StatusEffect<DataType>
  nameWithType: StatusEffect<DataType>
  fullName: CAF.Combat.StatusEffect<DataType>
  type: Class
  source:
    remote:
      path: Assets/CAF/Combat/Status Effects/StatusEffect.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: StatusEffect
    path: ../Assets/CAF/Combat/Status Effects/StatusEffect.cs
    startLine: 14
  assemblies:
  - CAF
  namespace: CAF.Combat
  syntax:
    content: 'public abstract class StatusEffect<DataType> : StatusEffect'
    typeParameters:
    - id: DataType
    content.vb: >-
      Public MustInherit Class StatusEffect(Of DataType)

          Inherits StatusEffect
  inheritance:
  - System.Object
  - CAF.Combat.StatusEffect
  inheritedMembers:
  - CAF.Combat.StatusEffect.target
  - CAF.Combat.StatusEffect.Apply
  nameWithType.vb: StatusEffect(Of DataType)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: CAF.Combat.StatusEffect(Of DataType)
  name.vb: StatusEffect(Of DataType)
- uid: CAF.Combat.StatusEffect`1.data
  commentId: F:CAF.Combat.StatusEffect`1.data
  id: data
  parent: CAF.Combat.StatusEffect`1
  langs:
  - csharp
  - vb
  name: data
  nameWithType: StatusEffect<DataType>.data
  fullName: CAF.Combat.StatusEffect<DataType>.data
  type: Field
  source:
    remote:
      path: Assets/CAF/Combat/Status Effects/StatusEffect.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: data
    path: ../Assets/CAF/Combat/Status Effects/StatusEffect.cs
    startLine: 16
  assemblies:
  - CAF
  namespace: CAF.Combat
  syntax:
    content: public DataType data
    return:
      type: '{DataType}'
    content.vb: Public data As DataType
  nameWithType.vb: StatusEffect(Of DataType).data
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CAF.Combat.StatusEffect(Of DataType).data
references:
- uid: CAF.Combat
  commentId: N:CAF.Combat
  name: CAF.Combat
  nameWithType: CAF.Combat
  fullName: CAF.Combat
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CAF.Combat.StatusEffect
  commentId: T:CAF.Combat.StatusEffect
  parent: CAF.Combat
  name: StatusEffect
  nameWithType: StatusEffect
  fullName: CAF.Combat.StatusEffect
- uid: CAF.Combat.StatusEffect.target
  commentId: F:CAF.Combat.StatusEffect.target
  parent: CAF.Combat.StatusEffect
  name: target
  nameWithType: StatusEffect.target
  fullName: CAF.Combat.StatusEffect.target
- uid: CAF.Combat.StatusEffect.Apply
  commentId: M:CAF.Combat.StatusEffect.Apply
  parent: CAF.Combat.StatusEffect
  name: Apply()
  nameWithType: StatusEffect.Apply()
  fullName: CAF.Combat.StatusEffect.Apply()
  spec.csharp:
  - uid: CAF.Combat.StatusEffect.Apply
    name: Apply
    nameWithType: StatusEffect.Apply
    fullName: CAF.Combat.StatusEffect.Apply
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CAF.Combat.StatusEffect.Apply
    name: Apply
    nameWithType: StatusEffect.Apply
    fullName: CAF.Combat.StatusEffect.Apply
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: '{DataType}'
  commentId: '!:DataType'
  definition: DataType
  name: DataType
  nameWithType: DataType
  fullName: DataType
- uid: DataType
  name: DataType
  nameWithType: DataType
  fullName: DataType
