### YamlMime:ManagedReference
items:
- uid: CAF.Entities.EntityState
  commentId: T:CAF.Entities.EntityState
  id: EntityState
  parent: CAF.Entities
  children:
  - CAF.Entities.EntityState.CheckInterrupt
  - CAF.Entities.EntityState.Controller
  - CAF.Entities.EntityState.GetName
  - CAF.Entities.EntityState.Initialize
  - CAF.Entities.EntityState.OnInterrupted
  - CAF.Entities.EntityState.OnUpdate
  langs:
  - csharp
  - vb
  name: EntityState
  nameWithType: EntityState
  fullName: CAF.Entities.EntityState
  type: Class
  source:
    remote:
      path: Assets/CAF/Entities/EntityState.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: EntityState
    path: ../Assets/CAF/Entities/EntityState.cs
    startLine: 6
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public class EntityState
    content.vb: Public Class EntityState
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CAF.Entities.EntityState.Controller
  commentId: P:CAF.Entities.EntityState.Controller
  id: Controller
  parent: CAF.Entities.EntityState
  langs:
  - csharp
  - vb
  name: Controller
  nameWithType: EntityState.Controller
  fullName: CAF.Entities.EntityState.Controller
  type: Property
  source:
    remote:
      path: Assets/CAF/Entities/EntityState.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: Controller
    path: ../Assets/CAF/Entities/EntityState.cs
    startLine: 8
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public EntityController Controller { get; set; }
    parameters: []
    return:
      type: CAF.Entities.EntityController
    content.vb: Public Property Controller As EntityController
  overload: CAF.Entities.EntityState.Controller*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CAF.Entities.EntityState.GetName
  commentId: M:CAF.Entities.EntityState.GetName
  id: GetName
  parent: CAF.Entities.EntityState
  langs:
  - csharp
  - vb
  name: GetName()
  nameWithType: EntityState.GetName()
  fullName: CAF.Entities.EntityState.GetName()
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/EntityState.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: GetName
    path: ../Assets/CAF/Entities/EntityState.cs
    startLine: 14
  assemblies:
  - CAF
  namespace: CAF.Entities
  summary: "\nGet the name of the state.\n"
  example: []
  syntax:
    content: public virtual string GetName()
    return:
      type: System.String
      description: The state name.
    content.vb: Public Overridable Function GetName As String
  overload: CAF.Entities.EntityState.GetName*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CAF.Entities.EntityState.Initialize
  commentId: M:CAF.Entities.EntityState.Initialize
  id: Initialize
  parent: CAF.Entities.EntityState
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: EntityState.Initialize()
  fullName: CAF.Entities.EntityState.Initialize()
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/EntityState.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: Initialize
    path: ../Assets/CAF/Entities/EntityState.cs
    startLine: 22
  assemblies:
  - CAF
  namespace: CAF.Entities
  summary: "\nCalled when the state is changed to.\n"
  example: []
  syntax:
    content: public virtual void Initialize()
    content.vb: Public Overridable Sub Initialize
  overload: CAF.Entities.EntityState.Initialize*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CAF.Entities.EntityState.OnUpdate
  commentId: M:CAF.Entities.EntityState.OnUpdate
  id: OnUpdate
  parent: CAF.Entities.EntityState
  langs:
  - csharp
  - vb
  name: OnUpdate()
  nameWithType: EntityState.OnUpdate()
  fullName: CAF.Entities.EntityState.OnUpdate()
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/EntityState.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: OnUpdate
    path: ../Assets/CAF/Entities/EntityState.cs
    startLine: 30
  assemblies:
  - CAF
  namespace: CAF.Entities
  summary: "\nCalled every update tick.\n"
  example: []
  syntax:
    content: public virtual void OnUpdate()
    content.vb: Public Overridable Sub OnUpdate
  overload: CAF.Entities.EntityState.OnUpdate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CAF.Entities.EntityState.CheckInterrupt
  commentId: M:CAF.Entities.EntityState.CheckInterrupt
  id: CheckInterrupt
  parent: CAF.Entities.EntityState
  langs:
  - csharp
  - vb
  name: CheckInterrupt()
  nameWithType: EntityState.CheckInterrupt()
  fullName: CAF.Entities.EntityState.CheckInterrupt()
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/EntityState.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: CheckInterrupt
    path: ../Assets/CAF/Entities/EntityState.cs
    startLine: 42
  assemblies:
  - CAF
  namespace: CAF.Entities
  summary: "\nCalled during OnUpdate to check if we should transition into another state.\n"
  example: []
  syntax:
    content: public virtual bool CheckInterrupt()
    return:
      type: System.Boolean
      description: Returns true if we transitioned into another state.
    content.vb: Public Overridable Function CheckInterrupt As Boolean
  overload: CAF.Entities.EntityState.CheckInterrupt*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CAF.Entities.EntityState.OnInterrupted
  commentId: M:CAF.Entities.EntityState.OnInterrupted
  id: OnInterrupted
  parent: CAF.Entities.EntityState
  langs:
  - csharp
  - vb
  name: OnInterrupted()
  nameWithType: EntityState.OnInterrupted()
  fullName: CAF.Entities.EntityState.OnInterrupted()
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/EntityState.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: OnInterrupted
    path: ../Assets/CAF/Entities/EntityState.cs
    startLine: 50
  assemblies:
  - CAF
  namespace: CAF.Entities
  summary: "\nCalled when we transition into another state.\n"
  example: []
  syntax:
    content: public virtual void OnInterrupted()
    content.vb: Public Overridable Sub OnInterrupted
  overload: CAF.Entities.EntityState.OnInterrupted*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: CAF.Entities
  commentId: N:CAF.Entities
  name: CAF.Entities
  nameWithType: CAF.Entities
  fullName: CAF.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CAF.Entities.EntityState.Controller*
  commentId: Overload:CAF.Entities.EntityState.Controller
  name: Controller
  nameWithType: EntityState.Controller
  fullName: CAF.Entities.EntityState.Controller
- uid: CAF.Entities.EntityController
  commentId: T:CAF.Entities.EntityController
  parent: CAF.Entities
  name: EntityController
  nameWithType: EntityController
  fullName: CAF.Entities.EntityController
- uid: CAF.Entities.EntityState.GetName*
  commentId: Overload:CAF.Entities.EntityState.GetName
  name: GetName
  nameWithType: EntityState.GetName
  fullName: CAF.Entities.EntityState.GetName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CAF.Entities.EntityState.Initialize*
  commentId: Overload:CAF.Entities.EntityState.Initialize
  name: Initialize
  nameWithType: EntityState.Initialize
  fullName: CAF.Entities.EntityState.Initialize
- uid: CAF.Entities.EntityState.OnUpdate*
  commentId: Overload:CAF.Entities.EntityState.OnUpdate
  name: OnUpdate
  nameWithType: EntityState.OnUpdate
  fullName: CAF.Entities.EntityState.OnUpdate
- uid: CAF.Entities.EntityState.CheckInterrupt*
  commentId: Overload:CAF.Entities.EntityState.CheckInterrupt
  name: CheckInterrupt
  nameWithType: EntityState.CheckInterrupt
  fullName: CAF.Entities.EntityState.CheckInterrupt
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CAF.Entities.EntityState.OnInterrupted*
  commentId: Overload:CAF.Entities.EntityState.OnInterrupted
  name: OnInterrupted
  nameWithType: EntityState.OnInterrupted
  fullName: CAF.Entities.EntityState.OnInterrupted
