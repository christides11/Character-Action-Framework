### YamlMime:ManagedReference
items:
- uid: CAF.Entities.EntityCombatManager
  commentId: T:CAF.Entities.EntityCombatManager
  id: EntityCombatManager
  parent: CAF.Entities
  children:
  - CAF.Entities.EntityCombatManager.Awake
  - CAF.Entities.EntityCombatManager.CheckAttackNode(CAF.Combat.MovesetAttackNode)
  - CAF.Entities.EntityCombatManager.CheckAttackNodes(System.Collections.Generic.List{CAF.Combat.MovesetAttackNode}@)
  - CAF.Entities.EntityCombatManager.CheckCurrentAttackCancelWindows
  - CAF.Entities.EntityCombatManager.CheckStartingNodes
  - CAF.Entities.EntityCombatManager.CheckStickDirection(UnityEngine.Vector2,System.Single,System.Int32)
  - CAF.Entities.EntityCombatManager.CLateUpdate
  - CAF.Entities.EntityCombatManager.Cleanup
  - CAF.Entities.EntityCombatManager.controller
  - CAF.Entities.EntityCombatManager.CurrentAttack
  - CAF.Entities.EntityCombatManager.CurrentMoveset
  - CAF.Entities.EntityCombatManager.Heal
  - CAF.Entities.EntityCombatManager.hitboxManager
  - CAF.Entities.EntityCombatManager.hitStop
  - CAF.Entities.EntityCombatManager.hitStun
  - CAF.Entities.EntityCombatManager.Hurt(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,CAF.Combat.HitInfo)
  - CAF.Entities.EntityCombatManager.LastHitBy
  - CAF.Entities.EntityCombatManager.Team
  - CAF.Entities.EntityCombatManager.TryAttack
  langs:
  - csharp
  - vb
  name: EntityCombatManager
  nameWithType: EntityCombatManager
  fullName: CAF.Entities.EntityCombatManager
  type: Class
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: EntityCombatManager
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 8
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: 'public class EntityCombatManager : MonoBehaviour, IHurtable'
    content.vb: >-
      Public Class EntityCombatManager

          Inherits MonoBehaviour

          Implements IHurtable
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  implements:
  - CAF.Combat.IHurtable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CAF.Entities.EntityCombatManager.Team
  commentId: P:CAF.Entities.EntityCombatManager.Team
  id: Team
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: Team
  nameWithType: EntityCombatManager.Team
  fullName: CAF.Entities.EntityCombatManager.Team
  type: Property
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: Team
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 10
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public int Team { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Team As Integer
  overload: CAF.Entities.EntityCombatManager.Team*
  implements:
  - CAF.Combat.IHurtable.Team
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CAF.Entities.EntityCombatManager.CurrentAttack
  commentId: P:CAF.Entities.EntityCombatManager.CurrentAttack
  id: CurrentAttack
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: CurrentAttack
  nameWithType: EntityCombatManager.CurrentAttack
  fullName: CAF.Entities.EntityCombatManager.CurrentAttack
  type: Property
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: CurrentAttack
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 11
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public MovesetAttackNode CurrentAttack { get; set; }
    parameters: []
    return:
      type: CAF.Combat.MovesetAttackNode
    content.vb: Public Property CurrentAttack As MovesetAttackNode
  overload: CAF.Entities.EntityCombatManager.CurrentAttack*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CAF.Entities.EntityCombatManager.CurrentMoveset
  commentId: P:CAF.Entities.EntityCombatManager.CurrentMoveset
  id: CurrentMoveset
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: CurrentMoveset
  nameWithType: EntityCombatManager.CurrentMoveset
  fullName: CAF.Entities.EntityCombatManager.CurrentMoveset
  type: Property
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: CurrentMoveset
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 12
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public MovesetDefinition CurrentMoveset { get; protected set; }
    parameters: []
    return:
      type: CAF.Combat.MovesetDefinition
    content.vb: Public Property CurrentMoveset As MovesetDefinition
  overload: CAF.Entities.EntityCombatManager.CurrentMoveset*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: CAF.Entities.EntityCombatManager.LastHitBy
  commentId: P:CAF.Entities.EntityCombatManager.LastHitBy
  id: LastHitBy
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: LastHitBy
  nameWithType: EntityCombatManager.LastHitBy
  fullName: CAF.Entities.EntityCombatManager.LastHitBy
  type: Property
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: LastHitBy
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 13
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public HitInfo LastHitBy { get; protected set; }
    parameters: []
    return:
      type: CAF.Combat.HitInfo
    content.vb: Public Property LastHitBy As HitInfo
  overload: CAF.Entities.EntityCombatManager.LastHitBy*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: CAF.Entities.EntityCombatManager.controller
  commentId: F:CAF.Entities.EntityCombatManager.controller
  id: controller
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: controller
  nameWithType: EntityCombatManager.controller
  fullName: CAF.Entities.EntityCombatManager.controller
  type: Field
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: controller
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 15
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public EntityController controller
    return:
      type: CAF.Entities.EntityController
    content.vb: Public controller As EntityController
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CAF.Entities.EntityCombatManager.hitboxManager
  commentId: F:CAF.Entities.EntityCombatManager.hitboxManager
  id: hitboxManager
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: hitboxManager
  nameWithType: EntityCombatManager.hitboxManager
  fullName: CAF.Entities.EntityCombatManager.hitboxManager
  type: Field
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: hitboxManager
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 16
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public EntityHitboxManager hitboxManager
    return:
      type: CAF.Entities.EntityHitboxManager
    content.vb: Public hitboxManager As EntityHitboxManager
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CAF.Entities.EntityCombatManager.hitStun
  commentId: F:CAF.Entities.EntityCombatManager.hitStun
  id: hitStun
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: hitStun
  nameWithType: EntityCombatManager.hitStun
  fullName: CAF.Entities.EntityCombatManager.hitStun
  type: Field
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: hitStun
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 17
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: >-
      [SerializeField]

      public int hitStun
    return:
      type: System.Int32
    content.vb: >-
      <SerializeField>

      Public hitStun As Integer
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CAF.Entities.EntityCombatManager.hitStop
  commentId: F:CAF.Entities.EntityCombatManager.hitStop
  id: hitStop
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: hitStop
  nameWithType: EntityCombatManager.hitStop
  fullName: CAF.Entities.EntityCombatManager.hitStop
  type: Field
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: hitStop
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 18
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: >-
      [SerializeField]

      public int hitStop
    return:
      type: System.Int32
    content.vb: >-
      <SerializeField>

      Public hitStop As Integer
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CAF.Entities.EntityCombatManager.Awake
  commentId: M:CAF.Entities.EntityCombatManager.Awake
  id: Awake
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: EntityCombatManager.Awake()
  fullName: CAF.Entities.EntityCombatManager.Awake()
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: Awake
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 20
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: protected virtual void Awake()
    content.vb: Protected Overridable Sub Awake
  overload: CAF.Entities.EntityCombatManager.Awake*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: CAF.Entities.EntityCombatManager.CLateUpdate
  commentId: M:CAF.Entities.EntityCombatManager.CLateUpdate
  id: CLateUpdate
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: CLateUpdate()
  nameWithType: EntityCombatManager.CLateUpdate()
  fullName: CAF.Entities.EntityCombatManager.CLateUpdate()
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: CLateUpdate
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 25
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public virtual void CLateUpdate()
    content.vb: Public Overridable Sub CLateUpdate
  overload: CAF.Entities.EntityCombatManager.CLateUpdate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CAF.Entities.EntityCombatManager.Cleanup
  commentId: M:CAF.Entities.EntityCombatManager.Cleanup
  id: Cleanup
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: Cleanup()
  nameWithType: EntityCombatManager.Cleanup()
  fullName: CAF.Entities.EntityCombatManager.Cleanup()
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: Cleanup
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 38
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public virtual void Cleanup()
    content.vb: Public Overridable Sub Cleanup
  overload: CAF.Entities.EntityCombatManager.Cleanup*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CAF.Entities.EntityCombatManager.TryAttack
  commentId: M:CAF.Entities.EntityCombatManager.TryAttack
  id: TryAttack
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: TryAttack()
  nameWithType: EntityCombatManager.TryAttack()
  fullName: CAF.Entities.EntityCombatManager.TryAttack()
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: TryAttack
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 48
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public virtual bool TryAttack()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function TryAttack As Boolean
  overload: CAF.Entities.EntityCombatManager.TryAttack*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CAF.Entities.EntityCombatManager.CheckStartingNodes
  commentId: M:CAF.Entities.EntityCombatManager.CheckStartingNodes
  id: CheckStartingNodes
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: CheckStartingNodes()
  nameWithType: EntityCombatManager.CheckStartingNodes()
  fullName: CAF.Entities.EntityCombatManager.CheckStartingNodes()
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: CheckStartingNodes
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 61
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: protected virtual bool CheckStartingNodes()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function CheckStartingNodes As Boolean
  overload: CAF.Entities.EntityCombatManager.CheckStartingNodes*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: CAF.Entities.EntityCombatManager.CheckCurrentAttackCancelWindows
  commentId: M:CAF.Entities.EntityCombatManager.CheckCurrentAttackCancelWindows
  id: CheckCurrentAttackCancelWindows
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: CheckCurrentAttackCancelWindows()
  nameWithType: EntityCombatManager.CheckCurrentAttackCancelWindows()
  fullName: CAF.Entities.EntityCombatManager.CheckCurrentAttackCancelWindows()
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: CheckCurrentAttackCancelWindows
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 89
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: protected virtual bool CheckCurrentAttackCancelWindows()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function CheckCurrentAttackCancelWindows As Boolean
  overload: CAF.Entities.EntityCombatManager.CheckCurrentAttackCancelWindows*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: CAF.Entities.EntityCombatManager.CheckAttackNodes(System.Collections.Generic.List{CAF.Combat.MovesetAttackNode}@)
  commentId: M:CAF.Entities.EntityCombatManager.CheckAttackNodes(System.Collections.Generic.List{CAF.Combat.MovesetAttackNode}@)
  id: CheckAttackNodes(System.Collections.Generic.List{CAF.Combat.MovesetAttackNode}@)
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: CheckAttackNodes(ref List<MovesetAttackNode>)
  nameWithType: EntityCombatManager.CheckAttackNodes(ref List<MovesetAttackNode>)
  fullName: CAF.Entities.EntityCombatManager.CheckAttackNodes(ref System.Collections.Generic.List<CAF.Combat.MovesetAttackNode>)
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: CheckAttackNodes
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 105
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: protected virtual bool CheckAttackNodes(ref List<MovesetAttackNode> nodes)
    parameters:
    - id: nodes
      type: System.Collections.Generic.List{CAF.Combat.MovesetAttackNode}
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function CheckAttackNodes(ByRef nodes As List(Of MovesetAttackNode)) As Boolean
  overload: CAF.Entities.EntityCombatManager.CheckAttackNodes*
  nameWithType.vb: EntityCombatManager.CheckAttackNodes(ByRef List(Of MovesetAttackNode))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: CAF.Entities.EntityCombatManager.CheckAttackNodes(ByRef System.Collections.Generic.List(Of CAF.Combat.MovesetAttackNode))
  name.vb: CheckAttackNodes(ByRef List(Of MovesetAttackNode))
- uid: CAF.Entities.EntityCombatManager.CheckAttackNode(CAF.Combat.MovesetAttackNode)
  commentId: M:CAF.Entities.EntityCombatManager.CheckAttackNode(CAF.Combat.MovesetAttackNode)
  id: CheckAttackNode(CAF.Combat.MovesetAttackNode)
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: CheckAttackNode(MovesetAttackNode)
  nameWithType: EntityCombatManager.CheckAttackNode(MovesetAttackNode)
  fullName: CAF.Entities.EntityCombatManager.CheckAttackNode(CAF.Combat.MovesetAttackNode)
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: CheckAttackNode
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 117
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: protected virtual bool CheckAttackNode(MovesetAttackNode node)
    parameters:
    - id: node
      type: CAF.Combat.MovesetAttackNode
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function CheckAttackNode(node As MovesetAttackNode) As Boolean
  overload: CAF.Entities.EntityCombatManager.CheckAttackNode*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: CAF.Entities.EntityCombatManager.CheckStickDirection(UnityEngine.Vector2,System.Single,System.Int32)
  commentId: M:CAF.Entities.EntityCombatManager.CheckStickDirection(UnityEngine.Vector2,System.Single,System.Int32)
  id: CheckStickDirection(UnityEngine.Vector2,System.Single,System.Int32)
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: CheckStickDirection(Vector2, Single, Int32)
  nameWithType: EntityCombatManager.CheckStickDirection(Vector2, Single, Int32)
  fullName: CAF.Entities.EntityCombatManager.CheckStickDirection(UnityEngine.Vector2, System.Single, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: CheckStickDirection
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 205
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: protected virtual bool CheckStickDirection(Vector2 wantedDirection, float deviation, int framesBack)
    parameters:
    - id: wantedDirection
      type: UnityEngine.Vector2
    - id: deviation
      type: System.Single
    - id: framesBack
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function CheckStickDirection(wantedDirection As Vector2, deviation As Single, framesBack As Integer) As Boolean
  overload: CAF.Entities.EntityCombatManager.CheckStickDirection*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: CAF.Entities.EntityCombatManager.Hurt(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,CAF.Combat.HitInfo)
  commentId: M:CAF.Entities.EntityCombatManager.Hurt(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,CAF.Combat.HitInfo)
  id: Hurt(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,CAF.Combat.HitInfo)
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: Hurt(Vector3, Vector3, Vector3, HitInfo)
  nameWithType: EntityCombatManager.Hurt(Vector3, Vector3, Vector3, HitInfo)
  fullName: CAF.Entities.EntityCombatManager.Hurt(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, CAF.Combat.HitInfo)
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: Hurt
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 210
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public virtual HitReaction Hurt(Vector3 center, Vector3 forward, Vector3 right, HitInfo hitInfo)
    parameters:
    - id: center
      type: UnityEngine.Vector3
    - id: forward
      type: UnityEngine.Vector3
    - id: right
      type: UnityEngine.Vector3
    - id: hitInfo
      type: CAF.Combat.HitInfo
    return:
      type: CAF.Combat.HitReaction
    content.vb: Public Overridable Function Hurt(center As Vector3, forward As Vector3, right As Vector3, hitInfo As HitInfo) As HitReaction
  overload: CAF.Entities.EntityCombatManager.Hurt*
  implements:
  - CAF.Combat.IHurtable.Hurt(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,CAF.Combat.HitInfo)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CAF.Entities.EntityCombatManager.Heal
  commentId: M:CAF.Entities.EntityCombatManager.Heal
  id: Heal
  parent: CAF.Entities.EntityCombatManager
  langs:
  - csharp
  - vb
  name: Heal()
  nameWithType: EntityCombatManager.Heal()
  fullName: CAF.Entities.EntityCombatManager.Heal()
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityCombatManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: Heal
    path: ../Assets/CAF/Entities/Managers/EntityCombatManager.cs
    startLine: 217
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public virtual void Heal()
    content.vb: Public Overridable Sub Heal
  overload: CAF.Entities.EntityCombatManager.Heal*
  implements:
  - CAF.Combat.IHurtable.Heal
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: CAF.Entities
  commentId: N:CAF.Entities
  name: CAF.Entities
  nameWithType: CAF.Entities
  fullName: CAF.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: CAF.Combat.IHurtable
  commentId: T:CAF.Combat.IHurtable
  parent: CAF.Combat
  name: IHurtable
  nameWithType: IHurtable
  fullName: CAF.Combat.IHurtable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: CAF.Combat
  commentId: N:CAF.Combat
  name: CAF.Combat
  nameWithType: CAF.Combat
  fullName: CAF.Combat
- uid: CAF.Entities.EntityCombatManager.Team*
  commentId: Overload:CAF.Entities.EntityCombatManager.Team
  name: Team
  nameWithType: EntityCombatManager.Team
  fullName: CAF.Entities.EntityCombatManager.Team
- uid: CAF.Combat.IHurtable.Team
  commentId: P:CAF.Combat.IHurtable.Team
  parent: CAF.Combat.IHurtable
  name: Team
  nameWithType: IHurtable.Team
  fullName: CAF.Combat.IHurtable.Team
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CAF.Entities.EntityCombatManager.CurrentAttack*
  commentId: Overload:CAF.Entities.EntityCombatManager.CurrentAttack
  name: CurrentAttack
  nameWithType: EntityCombatManager.CurrentAttack
  fullName: CAF.Entities.EntityCombatManager.CurrentAttack
- uid: CAF.Combat.MovesetAttackNode
  commentId: T:CAF.Combat.MovesetAttackNode
  parent: CAF.Combat
  name: MovesetAttackNode
  nameWithType: MovesetAttackNode
  fullName: CAF.Combat.MovesetAttackNode
- uid: CAF.Entities.EntityCombatManager.CurrentMoveset*
  commentId: Overload:CAF.Entities.EntityCombatManager.CurrentMoveset
  name: CurrentMoveset
  nameWithType: EntityCombatManager.CurrentMoveset
  fullName: CAF.Entities.EntityCombatManager.CurrentMoveset
- uid: CAF.Combat.MovesetDefinition
  commentId: T:CAF.Combat.MovesetDefinition
  parent: CAF.Combat
  name: MovesetDefinition
  nameWithType: MovesetDefinition
  fullName: CAF.Combat.MovesetDefinition
- uid: CAF.Entities.EntityCombatManager.LastHitBy*
  commentId: Overload:CAF.Entities.EntityCombatManager.LastHitBy
  name: LastHitBy
  nameWithType: EntityCombatManager.LastHitBy
  fullName: CAF.Entities.EntityCombatManager.LastHitBy
- uid: CAF.Combat.HitInfo
  commentId: T:CAF.Combat.HitInfo
  parent: CAF.Combat
  name: HitInfo
  nameWithType: HitInfo
  fullName: CAF.Combat.HitInfo
- uid: CAF.Entities.EntityController
  commentId: T:CAF.Entities.EntityController
  parent: CAF.Entities
  name: EntityController
  nameWithType: EntityController
  fullName: CAF.Entities.EntityController
- uid: CAF.Entities.EntityHitboxManager
  commentId: T:CAF.Entities.EntityHitboxManager
  parent: CAF.Entities
  name: EntityHitboxManager
  nameWithType: EntityHitboxManager
  fullName: CAF.Entities.EntityHitboxManager
- uid: CAF.Entities.EntityCombatManager.Awake*
  commentId: Overload:CAF.Entities.EntityCombatManager.Awake
  name: Awake
  nameWithType: EntityCombatManager.Awake
  fullName: CAF.Entities.EntityCombatManager.Awake
- uid: CAF.Entities.EntityCombatManager.CLateUpdate*
  commentId: Overload:CAF.Entities.EntityCombatManager.CLateUpdate
  name: CLateUpdate
  nameWithType: EntityCombatManager.CLateUpdate
  fullName: CAF.Entities.EntityCombatManager.CLateUpdate
- uid: CAF.Entities.EntityCombatManager.Cleanup*
  commentId: Overload:CAF.Entities.EntityCombatManager.Cleanup
  name: Cleanup
  nameWithType: EntityCombatManager.Cleanup
  fullName: CAF.Entities.EntityCombatManager.Cleanup
- uid: CAF.Entities.EntityCombatManager.TryAttack*
  commentId: Overload:CAF.Entities.EntityCombatManager.TryAttack
  name: TryAttack
  nameWithType: EntityCombatManager.TryAttack
  fullName: CAF.Entities.EntityCombatManager.TryAttack
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CAF.Entities.EntityCombatManager.CheckStartingNodes*
  commentId: Overload:CAF.Entities.EntityCombatManager.CheckStartingNodes
  name: CheckStartingNodes
  nameWithType: EntityCombatManager.CheckStartingNodes
  fullName: CAF.Entities.EntityCombatManager.CheckStartingNodes
- uid: CAF.Entities.EntityCombatManager.CheckCurrentAttackCancelWindows*
  commentId: Overload:CAF.Entities.EntityCombatManager.CheckCurrentAttackCancelWindows
  name: CheckCurrentAttackCancelWindows
  nameWithType: EntityCombatManager.CheckCurrentAttackCancelWindows
  fullName: CAF.Entities.EntityCombatManager.CheckCurrentAttackCancelWindows
- uid: CAF.Entities.EntityCombatManager.CheckAttackNodes*
  commentId: Overload:CAF.Entities.EntityCombatManager.CheckAttackNodes
  name: CheckAttackNodes
  nameWithType: EntityCombatManager.CheckAttackNodes
  fullName: CAF.Entities.EntityCombatManager.CheckAttackNodes
- uid: System.Collections.Generic.List{CAF.Combat.MovesetAttackNode}
  commentId: T:System.Collections.Generic.List{CAF.Combat.MovesetAttackNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MovesetAttackNode>
  nameWithType: List<MovesetAttackNode>
  fullName: System.Collections.Generic.List<CAF.Combat.MovesetAttackNode>
  nameWithType.vb: List(Of MovesetAttackNode)
  fullName.vb: System.Collections.Generic.List(Of CAF.Combat.MovesetAttackNode)
  name.vb: List(Of MovesetAttackNode)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CAF.Combat.MovesetAttackNode
    name: MovesetAttackNode
    nameWithType: MovesetAttackNode
    fullName: CAF.Combat.MovesetAttackNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CAF.Combat.MovesetAttackNode
    name: MovesetAttackNode
    nameWithType: MovesetAttackNode
    fullName: CAF.Combat.MovesetAttackNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: CAF.Entities.EntityCombatManager.CheckAttackNode*
  commentId: Overload:CAF.Entities.EntityCombatManager.CheckAttackNode
  name: CheckAttackNode
  nameWithType: EntityCombatManager.CheckAttackNode
  fullName: CAF.Entities.EntityCombatManager.CheckAttackNode
- uid: CAF.Entities.EntityCombatManager.CheckStickDirection*
  commentId: Overload:CAF.Entities.EntityCombatManager.CheckStickDirection
  name: CheckStickDirection
  nameWithType: EntityCombatManager.CheckStickDirection
  fullName: CAF.Entities.EntityCombatManager.CheckStickDirection
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: CAF.Entities.EntityCombatManager.Hurt*
  commentId: Overload:CAF.Entities.EntityCombatManager.Hurt
  name: Hurt
  nameWithType: EntityCombatManager.Hurt
  fullName: CAF.Entities.EntityCombatManager.Hurt
- uid: CAF.Combat.IHurtable.Hurt(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,CAF.Combat.HitInfo)
  commentId: M:CAF.Combat.IHurtable.Hurt(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,CAF.Combat.HitInfo)
  parent: CAF.Combat.IHurtable
  isExternal: true
  name: Hurt(Vector3, Vector3, Vector3, HitInfo)
  nameWithType: IHurtable.Hurt(Vector3, Vector3, Vector3, HitInfo)
  fullName: CAF.Combat.IHurtable.Hurt(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, CAF.Combat.HitInfo)
  spec.csharp:
  - uid: CAF.Combat.IHurtable.Hurt(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,CAF.Combat.HitInfo)
    name: Hurt
    nameWithType: IHurtable.Hurt
    fullName: CAF.Combat.IHurtable.Hurt
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CAF.Combat.HitInfo
    name: HitInfo
    nameWithType: HitInfo
    fullName: CAF.Combat.HitInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CAF.Combat.IHurtable.Hurt(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,CAF.Combat.HitInfo)
    name: Hurt
    nameWithType: IHurtable.Hurt
    fullName: CAF.Combat.IHurtable.Hurt
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CAF.Combat.HitInfo
    name: HitInfo
    nameWithType: HitInfo
    fullName: CAF.Combat.HitInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: CAF.Combat.HitReaction
  commentId: T:CAF.Combat.HitReaction
  parent: CAF.Combat
  name: HitReaction
  nameWithType: HitReaction
  fullName: CAF.Combat.HitReaction
- uid: CAF.Entities.EntityCombatManager.Heal*
  commentId: Overload:CAF.Entities.EntityCombatManager.Heal
  name: Heal
  nameWithType: EntityCombatManager.Heal
  fullName: CAF.Entities.EntityCombatManager.Heal
- uid: CAF.Combat.IHurtable.Heal
  commentId: M:CAF.Combat.IHurtable.Heal
  parent: CAF.Combat.IHurtable
  name: Heal()
  nameWithType: IHurtable.Heal()
  fullName: CAF.Combat.IHurtable.Heal()
  spec.csharp:
  - uid: CAF.Combat.IHurtable.Heal
    name: Heal
    nameWithType: IHurtable.Heal
    fullName: CAF.Combat.IHurtable.Heal
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CAF.Combat.IHurtable.Heal
    name: Heal
    nameWithType: IHurtable.Heal
    fullName: CAF.Combat.IHurtable.Heal
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
