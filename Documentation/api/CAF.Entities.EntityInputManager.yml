### YamlMime:ManagedReference
items:
- uid: CAF.Entities.EntityInputManager
  commentId: T:CAF.Entities.EntityInputManager
  id: EntityInputManager
  parent: CAF.Entities
  children:
  - CAF.Entities.EntityInputManager.Awake
  - CAF.Entities.EntityInputManager.ClearBuffer
  - CAF.Entities.EntityInputManager.ClearBuffer(System.Int32)
  - CAF.Entities.EntityInputManager.controller
  - CAF.Entities.EntityInputManager.controllerID
  - CAF.Entities.EntityInputManager.ControlType
  - CAF.Entities.EntityInputManager.GetAxis(System.Int32,System.Int32)
  - CAF.Entities.EntityInputManager.GetAxis2D(System.Int32,System.Int32)
  - CAF.Entities.EntityInputManager.GetButton(System.Int32,System.Int32,System.Boolean,System.Int32)
  - CAF.Entities.EntityInputManager.GetButton(System.Int32,System.Int32@,System.Int32,System.Boolean,System.Int32)
  - CAF.Entities.EntityInputManager.GetInputs
  - CAF.Entities.EntityInputManager.InputRecord
  - CAF.Entities.EntityInputManager.inputRecordMaxSize
  - CAF.Entities.EntityInputManager.ProcessInputs
  - CAF.Entities.EntityInputManager.SetController(System.Int32)
  - CAF.Entities.EntityInputManager.SetControlType(CAF.Input.InputControlType)
  - CAF.Entities.EntityInputManager.Tick
  langs:
  - csharp
  - vb
  name: EntityInputManager
  nameWithType: EntityInputManager
  fullName: CAF.Entities.EntityInputManager
  type: Class
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: EntityInputManager
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 7
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: 'public class EntityInputManager : MonoBehaviour'
    content.vb: >-
      Public Class EntityInputManager
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CAF.Entities.EntityInputManager.controller
  commentId: F:CAF.Entities.EntityInputManager.controller
  id: controller
  parent: CAF.Entities.EntityInputManager
  langs:
  - csharp
  - vb
  name: controller
  nameWithType: EntityInputManager.controller
  fullName: CAF.Entities.EntityInputManager.controller
  type: Field
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: controller
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 9
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: >-
      [SerializeField]

      protected EntityController controller
    return:
      type: CAF.Entities.EntityController
    content.vb: >-
      <SerializeField>

      Protected controller As EntityController
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CAF.Entities.EntityInputManager.ControlType
  commentId: P:CAF.Entities.EntityInputManager.ControlType
  id: ControlType
  parent: CAF.Entities.EntityInputManager
  langs:
  - csharp
  - vb
  name: ControlType
  nameWithType: EntityInputManager.ControlType
  fullName: CAF.Entities.EntityInputManager.ControlType
  type: Property
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: ControlType
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 11
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public InputControlType ControlType { get; protected set; }
    parameters: []
    return:
      type: CAF.Input.InputControlType
    content.vb: Public Property ControlType As InputControlType
  overload: CAF.Entities.EntityInputManager.ControlType*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: CAF.Entities.EntityInputManager.InputRecord
  commentId: P:CAF.Entities.EntityInputManager.InputRecord
  id: InputRecord
  parent: CAF.Entities.EntityInputManager
  langs:
  - csharp
  - vb
  name: InputRecord
  nameWithType: EntityInputManager.InputRecord
  fullName: CAF.Entities.EntityInputManager.InputRecord
  type: Property
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: InputRecord
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 12
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public List<InputRecordItem> InputRecord { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{CAF.Input.InputRecordItem}
    content.vb: Public Property InputRecord As List(Of InputRecordItem)
  overload: CAF.Entities.EntityInputManager.InputRecord*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: CAF.Entities.EntityInputManager.inputRecordMaxSize
  commentId: F:CAF.Entities.EntityInputManager.inputRecordMaxSize
  id: inputRecordMaxSize
  parent: CAF.Entities.EntityInputManager
  langs:
  - csharp
  - vb
  name: inputRecordMaxSize
  nameWithType: EntityInputManager.inputRecordMaxSize
  fullName: CAF.Entities.EntityInputManager.inputRecordMaxSize
  type: Field
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: inputRecordMaxSize
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 14
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: protected int inputRecordMaxSize
    return:
      type: System.Int32
    content.vb: Protected inputRecordMaxSize As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CAF.Entities.EntityInputManager.controllerID
  commentId: F:CAF.Entities.EntityInputManager.controllerID
  id: controllerID
  parent: CAF.Entities.EntityInputManager
  langs:
  - csharp
  - vb
  name: controllerID
  nameWithType: EntityInputManager.controllerID
  fullName: CAF.Entities.EntityInputManager.controllerID
  type: Field
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: controllerID
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 15
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: protected int controllerID
    return:
      type: System.Int32
    content.vb: Protected controllerID As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CAF.Entities.EntityInputManager.Awake
  commentId: M:CAF.Entities.EntityInputManager.Awake
  id: Awake
  parent: CAF.Entities.EntityInputManager
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: EntityInputManager.Awake()
  fullName: CAF.Entities.EntityInputManager.Awake()
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: Awake
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 17
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public virtual void Awake()
    content.vb: Public Overridable Sub Awake
  overload: CAF.Entities.EntityInputManager.Awake*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CAF.Entities.EntityInputManager.SetController(System.Int32)
  commentId: M:CAF.Entities.EntityInputManager.SetController(System.Int32)
  id: SetController(System.Int32)
  parent: CAF.Entities.EntityInputManager
  langs:
  - csharp
  - vb
  name: SetController(Int32)
  nameWithType: EntityInputManager.SetController(Int32)
  fullName: CAF.Entities.EntityInputManager.SetController(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: SetController
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 21
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public virtual void SetController(int controllerID)
    parameters:
    - id: controllerID
      type: System.Int32
    content.vb: Public Overridable Sub SetController(controllerID As Integer)
  overload: CAF.Entities.EntityInputManager.SetController*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CAF.Entities.EntityInputManager.SetControlType(CAF.Input.InputControlType)
  commentId: M:CAF.Entities.EntityInputManager.SetControlType(CAF.Input.InputControlType)
  id: SetControlType(CAF.Input.InputControlType)
  parent: CAF.Entities.EntityInputManager
  langs:
  - csharp
  - vb
  name: SetControlType(InputControlType)
  nameWithType: EntityInputManager.SetControlType(InputControlType)
  fullName: CAF.Entities.EntityInputManager.SetControlType(CAF.Input.InputControlType)
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: SetControlType
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 26
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public virtual void SetControlType(InputControlType controlType)
    parameters:
    - id: controlType
      type: CAF.Input.InputControlType
    content.vb: Public Overridable Sub SetControlType(controlType As InputControlType)
  overload: CAF.Entities.EntityInputManager.SetControlType*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CAF.Entities.EntityInputManager.Tick
  commentId: M:CAF.Entities.EntityInputManager.Tick
  id: Tick
  parent: CAF.Entities.EntityInputManager
  langs:
  - csharp
  - vb
  name: Tick()
  nameWithType: EntityInputManager.Tick()
  fullName: CAF.Entities.EntityInputManager.Tick()
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: Tick
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 31
  assemblies:
  - CAF
  namespace: CAF.Entities
  syntax:
    content: public virtual void Tick()
    content.vb: Public Overridable Sub Tick
  overload: CAF.Entities.EntityInputManager.Tick*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CAF.Entities.EntityInputManager.GetInputs
  commentId: M:CAF.Entities.EntityInputManager.GetInputs
  id: GetInputs
  parent: CAF.Entities.EntityInputManager
  langs:
  - csharp
  - vb
  name: GetInputs()
  nameWithType: EntityInputManager.GetInputs()
  fullName: CAF.Entities.EntityInputManager.GetInputs()
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: GetInputs
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 47
  assemblies:
  - CAF
  namespace: CAF.Entities
  summary: "\nGet the controller&apos;s inputs this frame and add them to the input record.\n"
  example: []
  syntax:
    content: protected virtual void GetInputs()
    content.vb: Protected Overridable Sub GetInputs
  overload: CAF.Entities.EntityInputManager.GetInputs*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: CAF.Entities.EntityInputManager.ProcessInputs
  commentId: M:CAF.Entities.EntityInputManager.ProcessInputs
  id: ProcessInputs
  parent: CAF.Entities.EntityInputManager
  langs:
  - csharp
  - vb
  name: ProcessInputs()
  nameWithType: EntityInputManager.ProcessInputs()
  fullName: CAF.Entities.EntityInputManager.ProcessInputs()
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: ProcessInputs
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 54
  assemblies:
  - CAF
  namespace: CAF.Entities
  summary: "\nUpdate the current frame&apos;s inputs based on the last frame&apos;s inputs.\n"
  example: []
  syntax:
    content: protected virtual void ProcessInputs()
    content.vb: Protected Overridable Sub ProcessInputs
  overload: CAF.Entities.EntityInputManager.ProcessInputs*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: CAF.Entities.EntityInputManager.GetAxis(System.Int32,System.Int32)
  commentId: M:CAF.Entities.EntityInputManager.GetAxis(System.Int32,System.Int32)
  id: GetAxis(System.Int32,System.Int32)
  parent: CAF.Entities.EntityInputManager
  langs:
  - csharp
  - vb
  name: GetAxis(Int32, Int32)
  nameWithType: EntityInputManager.GetAxis(Int32, Int32)
  fullName: CAF.Entities.EntityInputManager.GetAxis(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: GetAxis
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 72
  assemblies:
  - CAF
  namespace: CAF.Entities
  summary: "\nGet the axis at the offset given.\n"
  example: []
  syntax:
    content: public virtual float GetAxis(int axis, int frameOffset = 0)
    parameters:
    - id: axis
      type: System.Int32
      description: The ID of the axis.
    - id: frameOffset
      type: System.Int32
      description: The frame offset to get the axis at.
    return:
      type: System.Single
      description: The axis.
    content.vb: Public Overridable Function GetAxis(axis As Integer, frameOffset As Integer = 0) As Single
  overload: CAF.Entities.EntityInputManager.GetAxis*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CAF.Entities.EntityInputManager.GetAxis2D(System.Int32,System.Int32)
  commentId: M:CAF.Entities.EntityInputManager.GetAxis2D(System.Int32,System.Int32)
  id: GetAxis2D(System.Int32,System.Int32)
  parent: CAF.Entities.EntityInputManager
  langs:
  - csharp
  - vb
  name: GetAxis2D(Int32, Int32)
  nameWithType: EntityInputManager.GetAxis2D(Int32, Int32)
  fullName: CAF.Entities.EntityInputManager.GetAxis2D(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: GetAxis2D
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 87
  assemblies:
  - CAF
  namespace: CAF.Entities
  summary: "\nGet the 2D axis at the offset given.\n"
  example: []
  syntax:
    content: public virtual Vector2 GetAxis2D(int axis2DID, int frameOffset = 0)
    parameters:
    - id: axis2DID
      type: System.Int32
      description: The ID of the 2D axis.
    - id: frameOffset
      type: System.Int32
      description: The frame offset to get the 2D axis at.
    return:
      type: UnityEngine.Vector2
      description: The 2D axis.
    content.vb: Public Overridable Function GetAxis2D(axis2DID As Integer, frameOffset As Integer = 0) As Vector2
  overload: CAF.Entities.EntityInputManager.GetAxis2D*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CAF.Entities.EntityInputManager.GetButton(System.Int32,System.Int32,System.Boolean,System.Int32)
  commentId: M:CAF.Entities.EntityInputManager.GetButton(System.Int32,System.Int32,System.Boolean,System.Int32)
  id: GetButton(System.Int32,System.Int32,System.Boolean,System.Int32)
  parent: CAF.Entities.EntityInputManager
  langs:
  - csharp
  - vb
  name: GetButton(Int32, Int32, Boolean, Int32)
  nameWithType: EntityInputManager.GetButton(Int32, Int32, Boolean, Int32)
  fullName: CAF.Entities.EntityInputManager.GetButton(System.Int32, System.Int32, System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: GetButton
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 106
  assemblies:
  - CAF
  namespace: CAF.Entities
  summary: "\nGet the status of the button given. If the buffer is being checked, \nthe button returned will be from when it was first pressed within the window, if it exist.\nOtherwise, the button at the offset is given.\n"
  example: []
  syntax:
    content: public virtual InputRecordButton GetButton(int buttonID, int frameOffset = 0, bool checkBuffer = false, int bufferFrames = 3)
    parameters:
    - id: buttonID
      type: System.Int32
      description: The ID of the button to get.
    - id: frameOffset
      type: System.Int32
      description: The offset from the current frame to check.
    - id: checkBuffer
      type: System.Boolean
      description: If the buffer should be checked.
    - id: bufferFrames
      type: System.Int32
      description: How many frames to check for buffer.
    return:
      type: CAF.Input.InputRecordButton
      description: The button and the information about it on the frame.
    content.vb: Public Overridable Function GetButton(buttonID As Integer, frameOffset As Integer = 0, checkBuffer As Boolean = False, bufferFrames As Integer = 3) As InputRecordButton
  overload: CAF.Entities.EntityInputManager.GetButton*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CAF.Entities.EntityInputManager.GetButton(System.Int32,System.Int32@,System.Int32,System.Boolean,System.Int32)
  commentId: M:CAF.Entities.EntityInputManager.GetButton(System.Int32,System.Int32@,System.Int32,System.Boolean,System.Int32)
  id: GetButton(System.Int32,System.Int32@,System.Int32,System.Boolean,System.Int32)
  parent: CAF.Entities.EntityInputManager
  langs:
  - csharp
  - vb
  name: GetButton(Int32, out Int32, Int32, Boolean, Int32)
  nameWithType: EntityInputManager.GetButton(Int32, out Int32, Int32, Boolean, Int32)
  fullName: CAF.Entities.EntityInputManager.GetButton(System.Int32, out System.Int32, System.Int32, System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: GetButton
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 121
  assemblies:
  - CAF
  namespace: CAF.Entities
  summary: "\nGet the status of the button given. If the buffer is being checked, \nthe button returned will be from when it was first pressed within the window, if it exist.\nOtherwise, the button at the offset is given.\n"
  example: []
  syntax:
    content: public virtual InputRecordButton GetButton(int buttonID, out int gotOffset, int frameOffset = 0, bool checkBuffer = false, int bufferFrames = 3)
    parameters:
    - id: buttonID
      type: System.Int32
      description: The ID of the button to get.
    - id: gotOffset
      type: System.Int32
    - id: frameOffset
      type: System.Int32
      description: The offset from the current frame to check.
    - id: checkBuffer
      type: System.Boolean
      description: If the buffer should be checked.
    - id: bufferFrames
      type: System.Int32
      description: How many frames to check for buffer.
    return:
      type: CAF.Input.InputRecordButton
      description: The button and the information about it on the frame.
    content.vb: Public Overridable Function GetButton(buttonID As Integer, ByRef gotOffset As Integer, frameOffset As Integer = 0, checkBuffer As Boolean = False, bufferFrames As Integer = 3) As InputRecordButton
  overload: CAF.Entities.EntityInputManager.GetButton*
  nameWithType.vb: EntityInputManager.GetButton(Int32, ByRef Int32, Int32, Boolean, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: CAF.Entities.EntityInputManager.GetButton(System.Int32, ByRef System.Int32, System.Int32, System.Boolean, System.Int32)
  name.vb: GetButton(Int32, ByRef Int32, Int32, Boolean, Int32)
- uid: CAF.Entities.EntityInputManager.ClearBuffer
  commentId: M:CAF.Entities.EntityInputManager.ClearBuffer
  id: ClearBuffer
  parent: CAF.Entities.EntityInputManager
  langs:
  - csharp
  - vb
  name: ClearBuffer()
  nameWithType: EntityInputManager.ClearBuffer()
  fullName: CAF.Entities.EntityInputManager.ClearBuffer()
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: ClearBuffer
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 152
  assemblies:
  - CAF
  namespace: CAF.Entities
  summary: "\nClear every input&apos;s buffer.\n"
  example: []
  syntax:
    content: public virtual void ClearBuffer()
    content.vb: Public Overridable Sub ClearBuffer
  overload: CAF.Entities.EntityInputManager.ClearBuffer*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: CAF.Entities.EntityInputManager.ClearBuffer(System.Int32)
  commentId: M:CAF.Entities.EntityInputManager.ClearBuffer(System.Int32)
  id: ClearBuffer(System.Int32)
  parent: CAF.Entities.EntityInputManager
  langs:
  - csharp
  - vb
  name: ClearBuffer(Int32)
  nameWithType: EntityInputManager.ClearBuffer(Int32)
  fullName: CAF.Entities.EntityInputManager.ClearBuffer(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/CAF/Entities/Managers/EntityInputManager.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: ClearBuffer
    path: ../Assets/CAF/Entities/Managers/EntityInputManager.cs
    startLine: 164
  assemblies:
  - CAF
  namespace: CAF.Entities
  summary: "\nClear a specific buffer.\n"
  example: []
  syntax:
    content: public virtual void ClearBuffer(int inputID)
    parameters:
    - id: inputID
      type: System.Int32
      description: The input to clear the buffer for.
    content.vb: Public Overridable Sub ClearBuffer(inputID As Integer)
  overload: CAF.Entities.EntityInputManager.ClearBuffer*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: CAF.Entities
  commentId: N:CAF.Entities
  name: CAF.Entities
  nameWithType: CAF.Entities
  fullName: CAF.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: CAF.Entities.EntityController
  commentId: T:CAF.Entities.EntityController
  parent: CAF.Entities
  name: EntityController
  nameWithType: EntityController
  fullName: CAF.Entities.EntityController
- uid: CAF.Entities.EntityInputManager.ControlType*
  commentId: Overload:CAF.Entities.EntityInputManager.ControlType
  name: ControlType
  nameWithType: EntityInputManager.ControlType
  fullName: CAF.Entities.EntityInputManager.ControlType
- uid: CAF.Input.InputControlType
  commentId: T:CAF.Input.InputControlType
  parent: CAF.Input
  name: InputControlType
  nameWithType: InputControlType
  fullName: CAF.Input.InputControlType
- uid: CAF.Input
  commentId: N:CAF.Input
  name: CAF.Input
  nameWithType: CAF.Input
  fullName: CAF.Input
- uid: CAF.Entities.EntityInputManager.InputRecord*
  commentId: Overload:CAF.Entities.EntityInputManager.InputRecord
  name: InputRecord
  nameWithType: EntityInputManager.InputRecord
  fullName: CAF.Entities.EntityInputManager.InputRecord
- uid: System.Collections.Generic.List{CAF.Input.InputRecordItem}
  commentId: T:System.Collections.Generic.List{CAF.Input.InputRecordItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<InputRecordItem>
  nameWithType: List<InputRecordItem>
  fullName: System.Collections.Generic.List<CAF.Input.InputRecordItem>
  nameWithType.vb: List(Of InputRecordItem)
  fullName.vb: System.Collections.Generic.List(Of CAF.Input.InputRecordItem)
  name.vb: List(Of InputRecordItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CAF.Input.InputRecordItem
    name: InputRecordItem
    nameWithType: InputRecordItem
    fullName: CAF.Input.InputRecordItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CAF.Input.InputRecordItem
    name: InputRecordItem
    nameWithType: InputRecordItem
    fullName: CAF.Input.InputRecordItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CAF.Entities.EntityInputManager.Awake*
  commentId: Overload:CAF.Entities.EntityInputManager.Awake
  name: Awake
  nameWithType: EntityInputManager.Awake
  fullName: CAF.Entities.EntityInputManager.Awake
- uid: CAF.Entities.EntityInputManager.SetController*
  commentId: Overload:CAF.Entities.EntityInputManager.SetController
  name: SetController
  nameWithType: EntityInputManager.SetController
  fullName: CAF.Entities.EntityInputManager.SetController
- uid: CAF.Entities.EntityInputManager.SetControlType*
  commentId: Overload:CAF.Entities.EntityInputManager.SetControlType
  name: SetControlType
  nameWithType: EntityInputManager.SetControlType
  fullName: CAF.Entities.EntityInputManager.SetControlType
- uid: CAF.Entities.EntityInputManager.Tick*
  commentId: Overload:CAF.Entities.EntityInputManager.Tick
  name: Tick
  nameWithType: EntityInputManager.Tick
  fullName: CAF.Entities.EntityInputManager.Tick
- uid: CAF.Entities.EntityInputManager.GetInputs*
  commentId: Overload:CAF.Entities.EntityInputManager.GetInputs
  name: GetInputs
  nameWithType: EntityInputManager.GetInputs
  fullName: CAF.Entities.EntityInputManager.GetInputs
- uid: CAF.Entities.EntityInputManager.ProcessInputs*
  commentId: Overload:CAF.Entities.EntityInputManager.ProcessInputs
  name: ProcessInputs
  nameWithType: EntityInputManager.ProcessInputs
  fullName: CAF.Entities.EntityInputManager.ProcessInputs
- uid: CAF.Entities.EntityInputManager.GetAxis*
  commentId: Overload:CAF.Entities.EntityInputManager.GetAxis
  name: GetAxis
  nameWithType: EntityInputManager.GetAxis
  fullName: CAF.Entities.EntityInputManager.GetAxis
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: CAF.Entities.EntityInputManager.GetAxis2D*
  commentId: Overload:CAF.Entities.EntityInputManager.GetAxis2D
  name: GetAxis2D
  nameWithType: EntityInputManager.GetAxis2D
  fullName: CAF.Entities.EntityInputManager.GetAxis2D
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: CAF.Entities.EntityInputManager.GetButton*
  commentId: Overload:CAF.Entities.EntityInputManager.GetButton
  name: GetButton
  nameWithType: EntityInputManager.GetButton
  fullName: CAF.Entities.EntityInputManager.GetButton
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CAF.Input.InputRecordButton
  commentId: T:CAF.Input.InputRecordButton
  parent: CAF.Input
  name: InputRecordButton
  nameWithType: InputRecordButton
  fullName: CAF.Input.InputRecordButton
- uid: CAF.Entities.EntityInputManager.ClearBuffer*
  commentId: Overload:CAF.Entities.EntityInputManager.ClearBuffer
  name: ClearBuffer
  nameWithType: EntityInputManager.ClearBuffer
  fullName: CAF.Entities.EntityInputManager.ClearBuffer
