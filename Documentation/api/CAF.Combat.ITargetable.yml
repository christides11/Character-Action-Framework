### YamlMime:ManagedReference
items:
- uid: CAF.Combat.ITargetable
  commentId: T:CAF.Combat.ITargetable
  id: ITargetable
  parent: CAF.Combat
  children:
  - CAF.Combat.ITargetable.GetCenter
  - CAF.Combat.ITargetable.Targetable
  langs:
  - csharp
  - vb
  name: ITargetable
  nameWithType: ITargetable
  fullName: CAF.Combat.ITargetable
  type: Interface
  source:
    remote:
      path: Assets/CAF/Combat/Interfaces/ITargetable.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: ITargetable
    path: ../Assets/CAF/Combat/Interfaces/ITargetable.cs
    startLine: 4
  assemblies:
  - CAF
  namespace: CAF.Combat
  syntax:
    content: public interface ITargetable
    content.vb: Public Interface ITargetable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: CAF.Combat.ITargetable.Targetable
  commentId: P:CAF.Combat.ITargetable.Targetable
  id: Targetable
  parent: CAF.Combat.ITargetable
  langs:
  - csharp
  - vb
  name: Targetable
  nameWithType: ITargetable.Targetable
  fullName: CAF.Combat.ITargetable.Targetable
  type: Property
  source:
    remote:
      path: Assets/CAF/Combat/Interfaces/ITargetable.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: Targetable
    path: ../Assets/CAF/Combat/Interfaces/ITargetable.cs
    startLine: 9
  assemblies:
  - CAF
  namespace: CAF.Combat
  summary: "\nIf this object is currently targetable.\n"
  example: []
  syntax:
    content: bool Targetable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Targetable As Boolean
  overload: CAF.Combat.ITargetable.Targetable*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: CAF.Combat.ITargetable.GetCenter
  commentId: M:CAF.Combat.ITargetable.GetCenter
  id: GetCenter
  parent: CAF.Combat.ITargetable
  langs:
  - csharp
  - vb
  name: GetCenter()
  nameWithType: ITargetable.GetCenter()
  fullName: CAF.Combat.ITargetable.GetCenter()
  type: Method
  source:
    remote:
      path: Assets/CAF/Combat/Interfaces/ITargetable.cs
      branch: master
      repo: https://github.com/christides11/Character-Action-Framework.git
    id: GetCenter
    path: ../Assets/CAF/Combat/Interfaces/ITargetable.cs
    startLine: 13
  assemblies:
  - CAF
  namespace: CAF.Combat
  summary: "\nThe center of the object in world space.\n"
  example: []
  syntax:
    content: Vector3 GetCenter()
    return:
      type: UnityEngine.Vector3
    content.vb: Function GetCenter As Vector3
  overload: CAF.Combat.ITargetable.GetCenter*
references:
- uid: CAF.Combat
  commentId: N:CAF.Combat
  name: CAF.Combat
  nameWithType: CAF.Combat
  fullName: CAF.Combat
- uid: CAF.Combat.ITargetable.Targetable*
  commentId: Overload:CAF.Combat.ITargetable.Targetable
  name: Targetable
  nameWithType: ITargetable.Targetable
  fullName: CAF.Combat.ITargetable.Targetable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CAF.Combat.ITargetable.GetCenter*
  commentId: Overload:CAF.Combat.ITargetable.GetCenter
  name: GetCenter
  nameWithType: ITargetable.GetCenter
  fullName: CAF.Combat.ITargetable.GetCenter
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
